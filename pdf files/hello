{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "C3ai.ipynb",
      "provenance": [],
      "collapsed_sections": [
        "fW1PYwcYSYN5",
        "h0wADvGsbswC",
        "3itEJpm6oDsI",
        "OexSws8hH_wa",
        "LiC47eRjoE4e",
        "be5U_xyzihZM"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "e-dYMMLqHZ0G"
      },
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from matplotlib import pyplot as plt\n",
        "from scipy.stats import gamma\n",
        "import numpy as np\n",
        "from datetime import date, datetime as dt\n",
        "import c3aidatalake"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saFLAxX9YZ35",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a9106148-cabc-4552-805f-e266e8c4b23f"
      },
      "source": [
        "print(\"pandas version\", pd.__version__)\n",
        "assert pd.__version__[0] >= \"1\", \"To use this notebook, upgrade to the newest version of pandas. See https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html for details.\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "pandas version 1.1.4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fW1PYwcYSYN5"
      },
      "source": [
        "# UNUSED Fetch Historic Policy Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F1fGHFXdiJYK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7f1cfd3d-b4de-4c43-9ce0-e80a6a9e4269"
      },
      "source": [
        "title = 'Arizona_UnitedStates_Policy'\n",
        "policy_state = c3aidatalake.read_data_json(\n",
        "    \"locationpolicysummary\",\n",
        "    \"allversionsforpolicy\",\n",
        "    {\n",
        "    \"this\": {\n",
        "        \"id\": title\n",
        "    }\n",
        "\n",
        "}\n",
        ")\n",
        "print(policy_state)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[{'location': {'id': 'Arizona_UnitedStates'}, 'versionDate': '2020-09-12T00:00:00Z', 'easingOrder': 'New Restrictions Imposed', 'stayAtHome': 'Lifted', 'mandatoryQuarantine': 'Lifted', 'nonEssentialBusiness': 'New Business Closures or Limits', 'largeGatherings': 'New Limit on Large Gatherings in Place', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'New Service Limits', 'barClosures': 'Newly Closed', 'faceCoveringRequirement': 'Required for Certain Employees; Allows Local Officials to Require for General Public', 'PrimaryElectionPostponement': 'No', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'expandsAccesstoTelehealthServices': 'Yes', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-09-12T02:58:07Z', 'updatedBy': 'pruthvi.bheemarasetti@c3iot.com', 'timestamp': '2020-09-12T02:58:07Z', 'sourceFile': 'KFF_SocialDistancingActions_091020.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 13, 'lastSavedTimestamp': '2020-09-12T02:52:54Z', 'numSavedVersions': 5, 'savedVersion': -1}, {'location': {'id': 'Arizona_UnitedStates'}, 'versionDate': '2020-05-29T00:00:00Z', 'easingOrder': 'New Restrictions Imposed', 'stayAtHome': 'Lifted', 'mandatoryQuarantine': 'Lifted', 'nonEssentialBusiness': 'New Business Closures or Limits', 'largeGatherings': 'New Limit on Large Gatherings in Place', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'New Service Limits', 'barClosures': 'Newly Closed', 'faceCoveringRequirement': 'Required for Certain Employees; Allows Local Officials to Require for General Public', 'PrimaryElectionPostponement': 'No', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'expandsAccesstoTelehealthServices': 'Yes', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-09-12T02:52:54Z', 'updatedBy': 'pruthvi.bheemarasetti@c3iot.com', 'timestamp': '2020-09-12T02:52:54Z', 'sourceFile': 'KFF_SocialDistancingActions_091020.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 12, 'lastSavedTimestamp': '2020-09-12T02:52:54Z', 'numSavedVersions': 5, 'savedVersion': 5}, {'location': {'id': 'Arizona_UnitedStates'}, 'versionDate': '2020-05-29T00:00:00Z', 'easingOrder': 'Yes', 'stayAtHome': 'Lifted', 'mandatoryQuarantine': 'Lifted', 'nonEssentialBusiness': 'All Non-Essential Businesses Permitted to Reopen with Reduced Capacity', 'largeGatherings': 'Lifted', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'Reopened to Dine-in Service with Capacity Limits', 'PrimaryElectionPostponement': 'No', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'expandsAccesstoTelehealthServices': 'Yes', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-05-29T23:15:10Z', 'updatedBy': 'elliot.kirk@c3iot.com', 'timestamp': '2020-05-29T23:15:10Z', 'sourceFile': 'StateSocialDistancingActionsMay29_cleaned.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 10, 'lastSavedTimestamp': '2020-05-29T23:15:10Z', 'numSavedVersions': 4, 'savedVersion': 4}, {'location': {'id': 'Arizona_UnitedStates'}, 'easingOrder': 'No', 'stayAtHome': 'Statewide', 'mandatoryQuarantine': 'From Certain States', 'nonEssentialBusiness': 'All Non-Essential Businesses Closed', 'largeGatherings': '>10 People Prohibited', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'Closed Except for Takeout/Delivery', 'PrimaryElectionPostponement': 'No', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-05-29T19:39:11Z', 'updatedBy': 'elliot.kirk@c3iot.com', 'timestamp': '2020-05-29T19:39:11Z', 'sourceFile': 'StateSocialDistancingPolicies_05012020_cleaned.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 7, 'lastSavedTimestamp': '2020-05-29T19:39:11Z', 'numSavedVersions': 3, 'savedVersion': 3}, {'location': {'id': 'Arizona_UnitedStates'}, 'easingOrder': 'No', 'stayAtHome': 'Statewide', 'mandatoryQuarantine': 'From Certain States', 'nonEssentialBusiness': 'All Non-Essential Businesses Closed', 'largeGatherings': '>10 People Prohibited', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'Closed Except for Takeout/Delivery', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-05-05T04:59:27Z', 'updatedBy': 'ethan.ho@c3iot.com', 'timestamp': '2020-05-05T04:59:27Z', 'sourceFile': 'StateSocialDistancingPolicies_05012020_cleaned.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 5, 'lastSavedTimestamp': '2020-05-05T04:59:27Z', 'numSavedVersions': 2, 'savedVersion': 2}, {'location': {'id': 'Arizona_UnitedStates'}, 'easingOrder': 'No', 'stayAtHome': 'Statewide', 'mandatoryQuarantine': 'From Certain States', 'nonEssentialBusiness': 'All Non-Essential Businesses', 'largeGatherings': '>10 People Prohibited', 'schoolClosure': 'Closed for School Year', 'restaurantLimit': 'Closed Except for Takeout/Delivery', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'No Action', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'No', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'id': 'Arizona_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-05-05T04:58:29Z', 'updatedBy': 'ethan.ho@c3iot.com', 'timestamp': '2020-05-05T04:58:29Z', 'sourceFile': 'StateSocialDistancingMeasures_cleaned.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 3, 'lastSavedTimestamp': '2020-05-05T04:58:29Z', 'numSavedVersions': 1, 'savedVersion': 1}]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "861TtkhT9JIO",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "99ebeeef-96d6-4591-8989-6c6f2d94daf0"
      },
      "source": [
        "history_policies = []\n",
        "for state in states_list:\n",
        "  if state == 'United States_UnitedStates_Policy':\n",
        "    continue\n",
        "  try:\n",
        "    policy_state = c3aidatalake.read_data_json(\n",
        "        \"locationpolicysummary\",\n",
        "        \"allversionsforpolicy\",\n",
        "        {\n",
        "        \"this\": {\n",
        "            \"id\": state\n",
        "        }\n",
        "    }\n",
        "    )\n",
        "  except:\n",
        "    print(state)\n",
        "\n",
        "  history_policies = history_policies + [policy_state]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Alaska_UnitedStates_Policy\n",
            "Connecticut_UnitedStates_Policy\n",
            "Delaware_UnitedStates_Policy\n",
            "Georgia_UnitedStates_Policy\n",
            "Indiana_UnitedStates_Policy\n",
            "Kentucky_UnitedStates_Policy\n",
            "Louisiana_UnitedStates_Policy\n",
            "Maine_UnitedStates_Policy\n",
            "Maryland_UnitedStates_Policy\n",
            "Mississippi_UnitedStates_Policy\n",
            "New Jersey_UnitedStates_Policy\n",
            "New York_UnitedStates_Policy\n",
            "Ohio_UnitedStates_Policy\n",
            "Rhode Island_UnitedStates_Policy\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Kk23nsi9-GhB"
      },
      "source": [
        "def reformateTime(time):\n",
        "  time_list = list(time)\n",
        "  for ind in range(len(time_list)):\n",
        "    if time_list[ind] == \"-\":\n",
        "      time_list[ind] = '/'\n",
        "    elif time_list[ind] == \"T\":\n",
        "      return ''.join(time_list[2:ind])\n",
        "      print(time_list)\n",
        "  return ''.join(time_list)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gbzzzLdv-gTW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "outputId": "ab2236f6-6d40-44a9-b2a8-7b930684e706"
      },
      "source": [
        "# Check\n",
        "reformateTime(\"2020-09-12T00:00:00Z\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'20/09/12'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wMYZpY4P5ozo"
      },
      "source": [
        "\n",
        "def findPolicy(city,time):\n",
        "  time = dt.strptime(reformateTime(time),\"%y/%m/%d\")\n",
        "  for i in policy_california:\n",
        "    if \"versionDate\" in i:\n",
        "      date = i['versionDate']\n",
        "      date_processed = reformateTime(date)     \n",
        "      compare_time = dt.strptime(date_processed,\"%y/%m/%d\")\n",
        "      print(compare_time)\n",
        "      if time>compare_time:\n",
        "        \n",
        "        return i\n",
        "\n",
        "policy = findPolicy(\"test\",'2020-05-30T00:00:00Z')\n",
        "print(policy)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HM2uDrbu_Spb"
      },
      "source": [
        "np_history_policies = np.array(history_policies)\n",
        "print(history_policies[0] == history_policies[47])\n",
        "np_history_policies = np.delete(np_history_policies, 0)\n",
        "# print(np_history_policies[0][0])\n",
        "# print(len(np_history_policies))\n",
        "# print(np_history_policies[0][0].get('location').get('id'))\n",
        "\n",
        "states_arr = []\n",
        "for i in range(len(np_history_policies)):\n",
        "  state = np_history_policies[i][0].get('location').get('id')\n",
        "  states_arr = states_arr + [state]\n",
        "\n",
        "np_states_arr = np.unique(states_arr)\n",
        "print(len(np_states_arr))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aeBq6oeYJFdr"
      },
      "source": [
        "print(np_history_policies)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eN5OGYvHQMdA"
      },
      "source": [
        "def nearest(items, pivot):\n",
        "    return min(items, key=lambda x: abs(x - pivot))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h0wADvGsbswC"
      },
      "source": [
        "# UNUSED Needs to find max datetime in a list but can't"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UkhJn3VA9V-W",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "51b45812-33ec-470b-d189-3c50fca2be53"
      },
      "source": [
        "# test\n",
        "\n",
        "time = dt.strptime('20/05/30', \"%y/%m/%d\")\n",
        "testtime = dt.strptime('20/05/21', \"%y/%m/%d\")\n",
        "testtimetwo = dt.strptime('20/05/23', \"%y/%m/%d\")\n",
        "now = dt.strptime('22/11/15', \"%y/%m/%d\")\n",
        "max = (\"365 day, 0:00:00\")\n",
        "dates_dict = {}\n",
        "colorado = states_arr[3]\n",
        "for i in range(len(np_history_policies)):\n",
        "  if np_history_policies[i][0].get('location').get('id') == colorado:\n",
        "    for j in range(len(np_history_policies[i])):\n",
        "      if np_history_policies[i][j].get('versionDate') != None:\n",
        "        print(reformateTime(np_history_policies[i][j].get('versionDate')))\n",
        "        print(i, j)\n",
        "        datte_t = dt.strptime(reformateTime(np_history_policies[i][j].get('versionDate')), \"%y/%m/%d\")\n",
        "        if(time > datte_t):\n",
        "          dates_dict.update({datte_t: [i,j]})\n",
        "          print(dates_dict)\n",
        "\n",
        "print(\"dict:\", list(dates_dict.keys()))\n",
        "dates_list = list(dates_dict.keys())\n",
        "\n",
        "ddd = dt(2009, 10, 12, 10, 10)\n",
        "datetime_list = [ddd, testtimetwo, testtime]\n",
        "print(datetime_list)\n",
        "\n",
        "now = dt.strptime('22/11/15', \"%y/%m/%d\")\n",
        "min = now-time\n",
        "\n",
        "for i in range(len(datetime_list)):\n",
        "  \n",
        "    "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "20/09/12\n",
            "3 0\n",
            "20/05/29\n",
            "3 1\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [3, 1]}\n",
            "20/05/29\n",
            "3 2\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [3, 2]}\n",
            "20/09/12\n",
            "4 0\n",
            "20/05/29\n",
            "4 1\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [4, 1]}\n",
            "20/05/29\n",
            "4 2\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [4, 2]}\n",
            "20/09/12\n",
            "5 0\n",
            "20/05/29\n",
            "5 1\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [5, 1]}\n",
            "20/05/29\n",
            "5 2\n",
            "{datetime.datetime(2020, 5, 29, 0, 0): [5, 2]}\n",
            "dict: [datetime.datetime(2020, 5, 29, 0, 0)]\n",
            "2020-05-30 00:00:00\n",
            "[datetime.datetime(2009, 10, 12, 10, 10), datetime.datetime(2020, 5, 23, 0, 0), datetime.datetime(2020, 5, 21, 0, 0)]\n",
            "2\n",
            "9 days, 0:00:00\n",
            "7 days, 0:00:00\n",
            "\n",
            "Colorado_UnitedStates\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3itEJpm6oDsI"
      },
      "source": [
        "# UNUSED Find policy\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gyky92GNTH6H",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 795
        },
        "outputId": "47ae3f2a-1011-4e55-ee96-33737ff6f9b6"
      },
      "source": [
        "\n",
        "#takes survey data as input and returns policy columns\n",
        "#rows correspond with survey data frame\n",
        "def get_policy_dataframe (df):\n",
        "    #pdm = pdm.to_frame()\n",
        "    pdm = df[[\"location.id\", \"startTime\"]].copy()\n",
        "    \n",
        "    \n",
        "    # create new columns for each policy feature\n",
        "    # initialize with all zeros and fill in with 1's where it matches that policy feature\n",
        "    #Easing Order\n",
        "    pdm.loc[:,\"easingOrder_Proceeding\"] = 0\n",
        "    pdm.loc[:,\"easingOrder_Paused\"] = 0\n",
        "    pdm.loc[:,\"easingOrder_NewRestrictionsImposed\"] = 0\n",
        "    pdm.loc[:,\"easingOrder_Reopened\"] = 0\n",
        "    # stayAtHome policy\n",
        "    pdm.loc[:,\"stayAtHome_OriginalStayAtHomeOrderInPlace\"] = 0\n",
        "    pdm.loc[:,\"stayAtHome_StayAtHomeOrderEasedOrLifted\"] = 0\n",
        "    pdm.loc[:,\"stayAtHome_NewStayAtHomeOrderInPlace\"] = 0\n",
        "    pdm.loc[:,\"stayAtHome_NoAction\"] = 0\n",
        "    # mandatoryQuarrantine\n",
        "    pdm.loc[:,\"mandatoryQuarantine_Original Traveler Quarantine Mandate in Place\"] = 0\n",
        "    pdm.loc[:,\"mandatoryQuarantine_NewTravelerQuarantineMandateinPlace\"] = 0\n",
        "    pdm.loc[:,\"mandatoryQuarantine_TravelerQuarantineMandateEasedorLifted\"] = 0\n",
        "    pdm.loc[:,\"mandatoryQuarantine_NoAction\"] = 0\n",
        "    # largeGatherings\n",
        "    pdm.loc[:,\"largeGatherings_OriginalGatheringBan/LimitinPlace\"] = 0\n",
        "    pdm.loc[:,\"largeGatherings_GatheringBan/LimitExpandedorLifted\"] = 0\n",
        "    pdm.loc[:,\"largeGatherings_NewGatheringBan/LimitinPlace\"] = 0\n",
        "    pdm.loc[:,\"largeGatherings_NoAction\"] = 0\n",
        "    # schoolClosure\n",
        "    #   Nan\n",
        "    #emergencyDeclaration\t\n",
        "\t#   Yes (51); No (0)\n",
        "    pdm.loc[:,\"emergencyDeclaration\"] = 0\n",
        "    #pdm = pdm.assign(emergencyDeclaration=0)\n",
        "    \n",
        "    \n",
        "    \n",
        "    # iterate through new data frame\n",
        "    # for each row, get location\n",
        "    # with location, fill in columns for that feature\n",
        "    # based on policy for that location\n",
        "    print(\"testing each row\")\n",
        "    for index, row in pdm.iterrows():\n",
        "        # EasingOrder\n",
        "        print(row[\"location.id\"])\n",
        "        stateString = (str(row[\"location.id\"])+\"_Policy\")\n",
        "        policy_s = findPolicy(stateString,row[\"startTime\"])\n",
        "        print(policy_s[\"easingOrder\"])\n",
        "        if policy_s[\"easingOrder\"].lower().strip() == \"proceeding\":\n",
        "            pdm.at[index, \"easingOrder_Proceeding\"] = 1\n",
        "        elif policy_s[\"easingOrder\"].lower().strip() == \"paused\":\n",
        "            pdm.at[index, \"easingOrder_Paused\"] = 1\n",
        "        elif policy_s[\"easingOrder\"].lower().strip() == \"newrestrictionsimposed\":\n",
        "            pdm.loc[index, \"easingOrder_NewRestrictionsImposed\"] = 1\n",
        "        elif policy_s[\"easingOrder\"].lower().strip() == \"reopened\":\n",
        "            pdm.at[index, \"easingOrder_Reopened\"] = 1\n",
        "        \n",
        "        # stayAtHome policy\n",
        "        if (policy_s[\"stayAtHome\"].lower().strip() == \"lifted\") or  policy_s[\"stayAtHome\"].lower().strip() == \"eased\":\n",
        "            pdm.loc[index, \"stayAtHome_StayAtHomeOrderEasedOrLifted\"] = 1\n",
        "        elif policy_s[\"stayAtHome\"].lower().strip() == \"originalstayathomeorderinplace\":\n",
        "            pdm.loc[index, \"stayAtHome_OriginalStayAtHomeOrderInPlace\"] = 1\n",
        "        elif policy_s[\"stayAtHome\"].lower().strip() == \"newstayathomeorderinplace\":\n",
        "            pdm.loc[index, \"stayAtHome_NewStayAtHomeOrderInPlace\"] = 1\n",
        "        elif policy_s[\"stayAtHome\"].lower().strip() == \"noaction\":\n",
        "            pdm.loc[index, \"stayAtHome_NoAction\"] = 1\n",
        "        \n",
        "        # mandatoryQuarrantine\n",
        "        if policy_s[\"mandatoryQuarantine\"].lower().strip() == \"original\":\n",
        "            pdm.loc[index,\"mandatoryQuarantine_Original Traveler Quarantine Mandate in Place\"] = 1\n",
        "        elif policy_s[\"mandatoryQuarantine\"].lower().strip() == \"NewTravelerQuarantineMandateinPlace\".lower():\n",
        "            pdm.loc[index,\"mandatoryQuarantine_NewTravelerQuarantineMandateinPlace\"] = 1\n",
        "        elif policy_s[\"mandatoryQuarantine\"].lower().strip() == \"eased\" or policy_s[\"mandatoryQuarantine\"].lower().strip() == \"lifted\":\n",
        "            pdm.loc[index,\"mandatoryQuarantine_TravelerQuarantineMandateEasedorLifted\"] = 1\n",
        "        elif policy_s[\"mandatoryQuarantine\"].lower().strip() == \"noaction\":\n",
        "            pdm.loc[index,\"mandatoryQuarantine_NoAction\"] = 1\n",
        "        \n",
        "        # largeGatherings\n",
        "        if policy_s[\"largeGatherings\"].lower().strip() == \"originalgatheringban\":\n",
        "            pdm.loc[index,\"largeGatherings_OriginalGatheringBan/LimitinPlace\"] = 1\n",
        "        elif policy_s[\"largeGatherings\"].lower().strip() == \"lifted\":\n",
        "            pdm.loc[index,\"largeGatherings_GatheringBan/LimitExpandedorLifted\"] = 1\n",
        "        elif policy_s[\"largeGatherings\"].lower().strip() == \"New Limit on Large Gatherings in Place\".lower().strip():\n",
        "            pdm.loc[index,\"largeGatherings_NewGatheringBan/LimitinPlace\"] = 1\n",
        "        elif policy_s[\"largeGatherings\"].lower().strip() == \"noaction\":\n",
        "            pdm.loc[index,\"largeGatherings_NoAction\"] = 1\n",
        "        \n",
        "        # EmergencyDeclared\n",
        "        if policy_s[\"emergencyDeclaration\"] == \"Yes\":\n",
        "            pdm.at[index, \"emergencyDeclaration\"] = 1\n",
        "        \n",
        "        print(index)\n",
        "    \n",
        "\n",
        "    return pdm\n",
        "### End of get_policy_dataframe  method\n",
        "\n",
        "# get first 20 entries of survey to test with\n",
        "survey = c3aidatalake.fetch(\n",
        "    \"surveydata\",\n",
        "    {\n",
        "        \"spec\": {\n",
        "            \"limit\" : 20\n",
        "        }\n",
        "    }\n",
        ")\n",
        "\n",
        "policy_united_states = c3aidatalake.read_data_json(\n",
        "    \"locationpolicysummary\",\n",
        "    \"allversionsforpolicy\",\n",
        "    {\n",
        "        \"this\": {\n",
        "            \"id\": \"California_UnitedStates_Policy\"\n",
        "        }\n",
        "    }\n",
        ")\n",
        "policy_1 = policy_united_states[1]\n",
        "\n",
        "\n",
        "print(policy_1)\n",
        "\n",
        "# get data frame for each state\n",
        "\n",
        "print(survey)\n",
        "get_policy_dataframe(survey)\n",
        "#dataframe = cleaned_survey_data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'location': {'id': 'California_UnitedStates'}, 'versionDate': '2020-05-29T00:00:00Z', 'easingOrder': 'New Restrictions Imposed', 'stayAtHome': 'Statewide', 'mandatoryQuarantine': 'No Action', 'nonEssentialBusiness': 'New Business Closures or Limits', 'largeGatherings': 'All Gatherings Prohibited', 'schoolClosure': 'Recommended Closure for School Year', 'restaurantLimit': 'Newly Closed to Dine-in Service', 'barClosures': 'Newly Closed', 'faceCoveringRequirement': 'Required for General Public', 'PrimaryElectionPostponement': 'No', 'emergencyDeclaration': 'Yes', 'waiveTreatmentCost': 'No Action', 'freeVaccine': 'No Action', 'waiverOfPriorAuthorizationRequirements': 'No Action', 'prescriptionRefill': 'State Requires', 'premiumPaymentGracePeriod': 'No Action', 'marketplaceSpecialEnrollmentPeriod': 'Active', 'section1135Waiver': 'Approved', 'paidSickLeaves': 'Enacted', 'expandsAccesstoTelehealthServices': 'Yes', 'id': 'California_UnitedStates_Policy', 'meta': {'tenantTagId': 4, 'tenant': 'covid', 'tag': 'prod', 'created': '2020-05-05T04:57:50Z', 'createdBy': 'dataloader', 'updated': '2020-09-12T02:52:54Z', 'updatedBy': 'pruthvi.bheemarasetti@c3iot.com', 'timestamp': '2020-09-12T02:52:54Z', 'sourceFile': 'KFF_SocialDistancingActions_091020.csv', 'fetchInclude': '[this,versionEdits]', 'fetchType': 'Policy'}, 'version': 12, 'lastSavedTimestamp': '2020-09-12T02:52:54Z', 'numSavedVersions': 5, 'savedVersion': 5}\n",
            "                                  id  ...  annualHouseholdIncome\n",
            "0   000279c1666d8f838cbf9573b25e943d  ...                    NaN\n",
            "1   0002cc474056e14b010044a8547061a6  ...               120000.0\n",
            "2   00078a37abcdaa096a7572a406844d93  ...                10000.0\n",
            "3   0007b4a0940ec892c58c0d875a305462  ...                35000.0\n",
            "4   0014fa29afed18b4c3533df6d3fe3893  ...               199999.0\n",
            "5   00178011a1ef4ef9ed8999716134bc6e  ...                42000.0\n",
            "6   0018d6642549ba345099ff6294717da7  ...                    NaN\n",
            "7   0018edaa0eea41b279f993438c51873b  ...                    NaN\n",
            "8   001ba16340bd9b6ed1c49b43ab9f7292  ...                42500.0\n",
            "9   001d5861fbe9717c80e4533fe0b7cb3d  ...                84000.0\n",
            "10  001ef228fa1959a0bf10c258b1de621b  ...                79500.0\n",
            "11  00230c4625bf3a2d91fec260b03295a4  ...                20000.0\n",
            "12  00299bf1119e8e0b5e75a4403947708c  ...                48000.0\n",
            "13  002a1c31c1981653fd149936ba9540d0  ...               200000.0\n",
            "14  002b9764051af2d01f3dfb8d380b2d70  ...                    NaN\n",
            "15  002d5c02296123ccd477ece439357f8a  ...                80000.0\n",
            "16  003304aab00f9984ce56b2a7cdf9ebb7  ...                    NaN\n",
            "17  0034443f787fa7208f90d6e88fb8f003  ...                60000.0\n",
            "18  0034adb32e5a6e138101a8b2b30548e2  ...                50000.0\n",
            "19  00372a236dc4f9bd4cdf88272d699e91  ...                   58.0\n",
            "\n",
            "[20 rows x 38 columns]\n",
            "testing each row\n",
            "Texas_UnitedStates\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-10-674a5d64502d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    125\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msurvey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 127\u001b[0;31m \u001b[0mget_policy_dataframe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msurvey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    128\u001b[0m \u001b[0;31m#dataframe = cleaned_survey_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-10-674a5d64502d>\u001b[0m in \u001b[0;36mget_policy_dataframe\u001b[0;34m(df)\u001b[0m\n\u001b[1;32m     47\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"location.id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m         \u001b[0mstateString\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"location.id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m\"_Policy\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m         \u001b[0mpolicy_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfindPolicy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstateString\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"startTime\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpolicy_s\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"easingOrder\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mpolicy_s\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"easingOrder\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"proceeding\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'findPolicy' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kL_P8qSLA6RX"
      },
      "source": [
        "# return closest previous date in the list of dates\n",
        "def findDate(date_list_a, time):\n",
        "  now = dt.strptime('22/11/15', \"%y/%m/%d\")\n",
        "  min = now-time\n",
        "\n",
        "  for item in date_list_a:\n",
        "    if time-item < min:\n",
        "      max = item\n",
        "  \n",
        "  return date_list_a.index(max)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cUQoxNMPm9cG"
      },
      "source": [
        "# find the relevant policy given state and timestamp\n",
        "\n",
        "def findPolicy(state, time):\n",
        "  # state = <state name>_UnitedStates\n",
        "  # time in y/m/d \n",
        "  time = dt.strptime(time, \"%y/%m/%d\")\n",
        "  dates_dict = {}\n",
        "  for i in range(len(np_history_policies)):\n",
        "    if np_history_policies[i][0].get('location').get('id') == state:\n",
        "      for j in range(len(np_history_policies[i])):\n",
        "        if np_history_policies[i][j].get('versionDate') != None:\n",
        "          print(reformateTime(np_history_policies[i][j].get('versionDate')))\n",
        "          print(i, j)\n",
        "          date_t = dt.strptime(reformateTime(np_history_policies[i][j].get('versionDate')), \"%y/%m/%d\")\n",
        "          if(time > datte_t):\n",
        "            dates_dict.update({datte_t: [i,j]})\n",
        "            print(dates_dict)\n",
        "\n",
        "  print(\"dict:\", dates_dict)\n",
        "\n",
        "  max = dt.max(list(dates_dict.keys()))\n",
        "  index = dates_dict.get(max)\n",
        "\n",
        "  return np_history_policies[index[0]][index[i]]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "czl5JHei_DYD"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J0lKDKlzSelk"
      },
      "source": [
        "# Final: Pre-processing Survey Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ASawtPt8msFU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "outputId": "2fa589e3-1a4c-42b8-9aa8-beea54fdda2d"
      },
      "source": [
        "states = [\n",
        "  'Alabama_UnitedStates','Alaska_UnitedStates','Arizona_UnitedStates',\n",
        "  'Arkansas_UnitedStates','California_UnitedStates','Colorado_UnitedStates',\n",
        "  'Connecticut_UnitedStates','Delaware_UnitedStates','DistrictofColumbia_UnitedStates',\n",
        "  'Florida_UnitedStates','Georgia_UnitedStates','Hawaii_UnitedStates',\n",
        "  'Idaho_UnitedStates','Illinois_UnitedStates','Indiana_UnitedStates',\n",
        "  'Iowa_UnitedStates','Kansas_UnitedStates','Kentucky_UnitedStates',\n",
        "  'Louisiana_UnitedStates','Maine_UnitedStates','Maryland_UnitedStates',\n",
        "  'Massachusetts_UnitedStates','Michigan_UnitedStates','Minnesota_UnitedStates',\n",
        "  'Mississippi_UnitedStates','Missouri_UnitedStates','Montana_UnitedStates',\n",
        "  'Nebraska_UnitedStates','Nevada_UnitedStates','NewHampshire_UnitedStates',\n",
        "  'NewJersey_UnitedStates','NewMexico_UnitedStates','NewYork_UnitedStates',\n",
        "  'NorthCarolina_UnitedStates','NorthDakota_UnitedStates','Ohio_UnitedStates',\n",
        "  'Oklahoma_UnitedStates','Oregon_UnitedStates','Pennsylvania_UnitedStates',\n",
        "  'PuertoRico_UnitedStates','RhodeIsland_UnitedStates','SouthCarolina_UnitedStates',\n",
        "  'SouthDakota_UnitedStates','Tennessee_UnitedStates','Texas_UnitedStates',\n",
        "  'Utah_UnitedStates','Vermont_UnitedStates','Virginia_UnitedStates',\n",
        "  'Washington_UnitedStates','WestVirginia_UnitedStates','Wisconsin_UnitedStates',\n",
        "  'Wyoming_UnitedStates']\n",
        "import re\n",
        "#getting case count data\n",
        "metrics = [\n",
        "    \"JHU_ConfirmedCases\",\n",
        "    \"JHU_ConfirmedDeaths\"\n",
        "]\n",
        "\n",
        "complete_timeseries = c3aidatalake.evalmetrics(\n",
        "    \"outbreaklocation\",\n",
        "    {\n",
        "        \"spec\" : {\n",
        "            \"ids\" : states,\n",
        "            \"expressions\" : metrics,\n",
        "            \"start\" : \"2020-04-15\",\n",
        "            \"end\" : \"2020-07-01\",\n",
        "            \"interval\" : \"DAY\",\n",
        "        }\n",
        "    },\n",
        "    get_all = True\n",
        ")\n",
        "state_from_location = lambda x: \"_\".join(x.split('_')[-2:]).replace(\"_UnitedStates\", \"\")\n",
        "def reshapeTimeseries(timeseries_df):\n",
        "\n",
        "    reshaped_ts = pd.melt(\n",
        "        timeseries_df, \n",
        "        id_vars=['dates'], \n",
        "        value_vars=[x for x in timeseries_df.columns if re.match('.*\\.data', x)]\n",
        "    ).rename(columns={\"value\": \"data\", \"dates\": \"date\"})\n",
        "\n",
        "    reshaped_ts[\"state\"] = (\n",
        "        reshaped_ts[\"variable\"]\n",
        "        .str.replace(\"\\..*\", \"\")\n",
        "        .apply(state_from_location)\n",
        "    )\n",
        "\n",
        "    reshaped_ts[\"metric\"] = (\n",
        "        reshaped_ts[\"variable\"]\n",
        "        .str.replace(\".*UnitedStates\\.\", \"\")\n",
        "        .str.replace(\"\\..*\", \"\")\n",
        "    )\n",
        "    \n",
        "\n",
        "    return reshaped_ts\n",
        "state_timeseries = reshapeTimeseries(complete_timeseries)\n",
        "state_timeseries.head()\n",
        "state_cases = (\n",
        "    state_timeseries\n",
        "    .loc[state_timeseries.date > '2020-03-10']\n",
        "    .groupby(['date', 'state', 'metric'])['data']\n",
        "    .sum()\n",
        "    .unstack('metric')\n",
        "    .reset_index()\n",
        ")\n",
        "state_cases['death_rate'] = state_cases.apply(\n",
        "    lambda x: 0 if x.JHU_ConfirmedCases == 0\n",
        "    else x.JHU_ConfirmedDeaths / x.JHU_ConfirmedCases,\n",
        "    axis=1\n",
        ")\n",
        "\n",
        "#obtaining census data from 2018\n",
        "population_limits = (\n",
        "    f\"contains(parent, 'UnitedStates') &&\" # US data\n",
        "    \"gender == 'Male/Female' && year == 2018 && origin == 'United States Census'\" # From 2018 estimates\n",
        ")\n",
        "\n",
        "census = c3aidatalake.fetch(\n",
        "    \"populationdata\",\n",
        "    {\n",
        "      \"spec\": {\n",
        "        \"filter\": population_limits\n",
        "      }\n",
        "    },\n",
        "    get_all = True\n",
        ")\n",
        "\n",
        "census['state'] = census['parent.id'].apply(state_from_location)\n",
        "census = census.rename(columns={'parent.id': 'location'})\n",
        "census_cols = [\n",
        "    \"populationAge\",\n",
        "    \"value\",\n",
        "    \"location\",\n",
        "    \"state\"\n",
        "]\n",
        "\n",
        "census_by_state = (\n",
        "    census[census_cols]\n",
        "    .loc[census.state.isin(map(lambda x: x.replace(\"_UnitedStates\", \"\"), states))]\n",
        "    .groupby([\"state\", \"populationAge\"])['value']\n",
        "    .sum()\n",
        "    .unstack(\"populationAge\")\n",
        "    .reset_index()\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-5-7dd714698505>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     36\u001b[0m         }\n\u001b[1;32m     37\u001b[0m     },\n\u001b[0;32m---> 38\u001b[0;31m     \u001b[0mget_all\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m )\n\u001b[1;32m     40\u001b[0m \u001b[0mstate_from_location\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"_\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'_'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"_UnitedStates\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/content/c3aidatalake.py\u001b[0m in \u001b[0;36mevalmetrics\u001b[0;34m(typename, body, get_all, remove_meta)\u001b[0m\n\u001b[1;32m     84\u001b[0m                 \u001b[0mnew_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson_normalize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse_json\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'result'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m                 \u001b[0mnew_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexplode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 86\u001b[0;31m                 \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_df\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     87\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     88\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/reshape/concat.py\u001b[0m in \u001b[0;36mconcat\u001b[0;34m(objs, axis, join, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[1;32m    285\u001b[0m     )\n\u001b[1;32m    286\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 287\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    288\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    289\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/reshape/concat.py\u001b[0m in \u001b[0;36mget_result\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    501\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    502\u001b[0m             new_data = concatenate_block_managers(\n\u001b[0;32m--> 503\u001b[0;31m                 \u001b[0mmgrs_indexers\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnew_axes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconcat_axis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbm_axis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    504\u001b[0m             )\n\u001b[1;32m    505\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/internals/concat.py\u001b[0m in \u001b[0;36mconcatenate_block_managers\u001b[0;34m(mgrs_indexers, axes, concat_axis, copy)\u001b[0m\n\u001b[1;32m     77\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m             b = make_block(\n\u001b[0;32m---> 79\u001b[0;31m                 \u001b[0m_concatenate_join_units\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjoin_units\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconcat_axis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     80\u001b[0m                 \u001b[0mplacement\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplacement\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m             )\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/internals/concat.py\u001b[0m in \u001b[0;36m_concatenate_join_units\u001b[0;34m(join_units, concat_axis, copy)\u001b[0m\n\u001b[1;32m    316\u001b[0m     to_concat = [\n\u001b[1;32m    317\u001b[0m         \u001b[0mju\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_reindexed_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mempty_dtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mempty_dtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mupcasted_na\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mupcasted_na\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 318\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mju\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mjoin_units\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m     ]\n\u001b[1;32m    320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/internals/concat.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    316\u001b[0m     to_concat = [\n\u001b[1;32m    317\u001b[0m         \u001b[0mju\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_reindexed_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mempty_dtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mempty_dtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mupcasted_na\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mupcasted_na\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 318\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mju\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mjoin_units\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m     ]\n\u001b[1;32m    320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/internals/concat.py\u001b[0m in \u001b[0;36mget_reindexed_values\u001b[0;34m(self, empty_dtype, upcasted_na)\u001b[0m\n\u001b[1;32m    299\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    300\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 301\u001b[0;31m                 \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0malgos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake_nd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    302\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    303\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36mtake_nd\u001b[0;34m(arr, indexer, axis, out, fill_value, allow_fill)\u001b[0m\n\u001b[1;32m   1709\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1710\u001b[0m     func = _get_take_nd_function(\n\u001b[0;32m-> 1711\u001b[0;31m         \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmask_info\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1712\u001b[0m     )\n\u001b[1;32m   1713\u001b[0m     \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36m_get_take_nd_function\u001b[0;34m(ndim, arr_dtype, out_dtype, axis, mask_info)\u001b[0m\n\u001b[1;32m   1489\u001b[0m ):\n\u001b[1;32m   1490\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mndim\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1491\u001b[0;31m         \u001b[0mtup\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0marr_dtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout_dtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1492\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mndim\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1493\u001b[0m             \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_take_1d_dict\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/core/_dtype.py\u001b[0m in \u001b[0;36m_name_get\u001b[0;34m(dtype)\u001b[0m\n\u001b[1;32m    345\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    346\u001b[0m     \u001b[0;31m# append bit counts\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 347\u001b[0;31m     \u001b[0;32mif\u001b[0m \u001b[0m_name_includes_bit_suffix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    348\u001b[0m         \u001b[0mname\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"{}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitemsize\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    349\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/core/_dtype.py\u001b[0m in \u001b[0;36m_name_includes_bit_suffix\u001b[0;34m(dtype)\u001b[0m\n\u001b[1;32m    324\u001b[0m         \u001b[0;31m# implied\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    325\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 326\u001b[0;31m     \u001b[0;32melif\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0missubdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflexible\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0m_isunsized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    327\u001b[0m         \u001b[0;31m# unspecified\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/core/numerictypes.py\u001b[0m in \u001b[0;36missubdtype\u001b[0;34m(arg1, arg2)\u001b[0m\n\u001b[1;32m    391\u001b[0m     \"\"\"\n\u001b[1;32m    392\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0missubclass_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgeneric\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 393\u001b[0;31m         \u001b[0marg1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    394\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0missubclass_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgeneric\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    395\u001b[0m         \u001b[0marg2_orig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8wgURaURYaoZ"
      },
      "source": [
        "# Fetch participants who are located in California\n",
        "survey = c3aidatalake.fetch(\n",
        "    \"surveydata\",\n",
        "    {\n",
        "        \"spec\": {\n",
        "            # \"filter\": \"location == 'California_UnitedStates'\"\n",
        "        }\n",
        "    },\n",
        "    get_all = True\n",
        ")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l1dIW_dpYajQ"
      },
      "source": [
        "# Sorting survey data by state alphabetical\n",
        "sorted_survey = survey.sort_values('location.id')\n",
        "#  sorted_survey\n",
        "loc= survey['location.id']\n",
        "# l\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dBlOou03YabY"
      },
      "source": [
        "sorted_survey_filtered = sorted_survey[sorted_survey['coronavirusIntent_Mask'].notnull()]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tiByHWeu0RwP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00a6b591-4e74-47df-f57c-2057fb6896cf"
      },
      "source": [
        "# sorting all rows with NaN in them\n",
        "sorted_survey_filtered_v2 = sorted_survey.copy()\n",
        "for col in sorted_survey.columns:\n",
        "  sorted_survey_filtered_v2 = sorted_survey.loc[sorted_survey[col].notnull()]\n",
        "\n",
        "# Y label data 0-100\n",
        "\n",
        "# Get rid of columns we dont want example\n",
        "\n",
        "\n",
        "# filter data to only after May 5, change F/T to 0/1 \n",
        "cleaned_survey_data = sorted_survey_filtered_v2.loc[sorted_survey_filtered_v2['startTime'] > '2020-05-05'] \n",
        "cleaned_survey_data[['coronaSimilarFlu', 'coronaOnlyElderly','youngInvulnerable','elderlyMoreRisk','coronaAllHospitalize','coronaKillsMost',\n",
        "                     'ethnicitySpreadsCovid','allSpreadCovid','nonNativesSpreadCovid','asymptomaticSpread','onlySickSpread',\n",
        "                     'infectFromAnimal']]*=1\n",
        "# cleaned_survey_data\n",
        "\n",
        "\n",
        "cleaned_survey_data = cleaned_survey_data.drop(columns = [\"id\",\"birthYear2020\",\"coronavirusIntent_SixFeet\",\"coronavirusIntent_StayHome\", \\\n",
        "                                             \"coronavirusIntent_WashHands\",\"coronavirusLocalCommunity\",\"coronavirusSupportSystem\",\"ratioOfAdultHospitalization\",\\\n",
        "                                            \"zipcodePrefix\"])\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:3069: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  self[k1] = value[k2]\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rvJMD9DowmYu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "outputId": "d9fa940b-b90e-485a-806f-419b0c5a090d"
      },
      "source": [
        "cleaned_survey_data.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusEmployment</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>coronavirusSymptoms</th>\n",
              "      <th>coronavirusWhenShouldReopen</th>\n",
              "      <th>education</th>\n",
              "      <th>ethnicity</th>\n",
              "      <th>gender</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religion</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>startTime</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>location.id</th>\n",
              "      <th>annualHouseholdIncome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>5.9</td>\n",
              "      <td>now-full</td>\n",
              "      <td>89.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-yr</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>2020-05-28T22:44:31Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>10000000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>5.2</td>\n",
              "      <td>was-full</td>\n",
              "      <td>72.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>male</td>\n",
              "      <td>0.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.1</td>\n",
              "      <td>agnostic</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2020-05-28T22:37:49Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>75000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1339</th>\n",
              "      <td>5.6</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>62.0</td>\n",
              "      <td>muscle-ache</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>some-college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.2</td>\n",
              "      <td>5.8</td>\n",
              "      <td>4.9</td>\n",
              "      <td>something-else</td>\n",
              "      <td>9.1</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2020-06-11T20:24:26Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>49000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1091</th>\n",
              "      <td>4.0</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>100.0</td>\n",
              "      <td>fatigue</td>\n",
              "      <td>2-mo</td>\n",
              "      <td>highschool</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>atheist</td>\n",
              "      <td>0.7</td>\n",
              "      <td>5.7</td>\n",
              "      <td>2020-05-29T02:54:25Z</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>20842.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1627</th>\n",
              "      <td>0.0</td>\n",
              "      <td>now-retired</td>\n",
              "      <td>10.0</td>\n",
              "      <td>none</td>\n",
              "      <td>immediate</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.2</td>\n",
              "      <td>10.0</td>\n",
              "      <td>something-else</td>\n",
              "      <td>8.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>2020-06-10T02:25:53Z</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>150000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1757</th>\n",
              "      <td>10.0</td>\n",
              "      <td>was-disabled</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>3-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.7</td>\n",
              "      <td>10.0</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>7.9</td>\n",
              "      <td>10.0</td>\n",
              "      <td>2020-06-04T22:13:51Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>12000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      coronavirusConcern  ... annualHouseholdIncome\n",
              "489                  5.9  ...            10000000.0\n",
              "136                  5.2  ...               75000.0\n",
              "1339                 5.6  ...               49000.0\n",
              "1091                 4.0  ...               20842.0\n",
              "1627                 0.0  ...              150000.0\n",
              "1757                10.0  ...               12000.0\n",
              "\n",
              "[6 rows x 29 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MXPowFUyRREV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "outputId": "25a18c31-6840-49e1-d12e-a8e4b5ef7e92"
      },
      "source": [
        "survey2=survey\n",
        "survey2['startTime'] = pd.to_datetime(survey['startTime'])\n",
        "survey2['startTime'] = survey['startTime'].apply(lambda t: t.replace(second=0))\n",
        "survey2['startTime'] = survey['startTime'].apply(lambda t: t.replace(minute=0))\n",
        "survey2['startTime'] = survey['startTime'].apply(lambda t: t.replace(hour=0))\n",
        "surveydates= survey2['startTime'].value_counts()\n",
        "\n",
        "import datetime\n",
        "census_by_state2=census_by_state\n",
        "census_and_cases = pd.merge(left=census_by_state2[['state','Median','Total']], right = state_cases, left_on='state',right_on='state')\n",
        "census_and_cases['state'] =  census_and_cases['state'].astype(str) + '_UnitedStates'\n",
        "\n",
        "case_dates = list(census_and_cases['date'].value_counts().to_frame().index.values)\n",
        "main_list = list(set(case_dates)-set(surveydates.to_frame().index.values))\n",
        "for i in main_list:\n",
        "  census_and_cases = census_and_cases[census_and_cases['date'] != i]\n",
        "  \n",
        "census_num = census_and_cases.select_dtypes(include=[np.number])\n",
        "normalized_census = ((census_num-census_num.min())/(census_num.max()-census_num.min()))\n",
        "census_and_cases[normalized_census.columns] = normalized_census\n",
        "census_and_cases.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>state</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>date</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-04-29</td>\n",
              "      <td>0.016861</td>\n",
              "      <td>0.008085</td>\n",
              "      <td>0.347297</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-04-30</td>\n",
              "      <td>0.017313</td>\n",
              "      <td>0.008605</td>\n",
              "      <td>0.362018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-06</td>\n",
              "      <td>0.021435</td>\n",
              "      <td>0.010911</td>\n",
              "      <td>0.374029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-15</td>\n",
              "      <td>0.028332</td>\n",
              "      <td>0.015457</td>\n",
              "      <td>0.407075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-25</td>\n",
              "      <td>0.037623</td>\n",
              "      <td>0.018152</td>\n",
              "      <td>0.355348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                   state    Median  ...  JHU_ConfirmedDeaths death_rate\n",
              "14  Alabama_UnitedStates  0.273277  ...             0.008085   0.347297\n",
              "15  Alabama_UnitedStates  0.273277  ...             0.008605   0.362018\n",
              "21  Alabama_UnitedStates  0.273277  ...             0.010911   0.374029\n",
              "30  Alabama_UnitedStates  0.273277  ...             0.015457   0.407075\n",
              "40  Alabama_UnitedStates  0.273277  ...             0.018152   0.355348\n",
              "43  Alabama_UnitedStates  0.273277  ...             0.018964   0.333169\n",
              "\n",
              "[6 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 201
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lq-HxLf9ax-W",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "outputId": "3ed7adff-a810-41a4-96ac-ae5f3f6e46e1"
      },
      "source": [
        "def value_to_col(dataframe, policy):\n",
        "    temp = dataframe[policy].fillna(0)\n",
        "    dfcount = temp.value_counts()\n",
        "    options = list(dfcount.to_frame().index.values)\n",
        "    for i in options:\n",
        "        dataframe.loc[:,policy+\"_\"+i]=np.where(temp.str.contains(i),1,0)\n",
        "    return dataframe\n",
        "\n",
        "cleaned_survey_data2=cleaned_survey_data[['education','religion','ethnicity','gender']]\n",
        "cleaned_survey_data2.loc[cleaned_survey_data2['education'].str.contains('highschool'), 'education'] = 'highSchool'\n",
        "cleaned_survey_data2=value_to_col(cleaned_survey_data2,\"religion\")\n",
        "cleaned_survey_data2=value_to_col(cleaned_survey_data2,\"ethnicity\")\n",
        "cleaned_survey_data2=value_to_col(cleaned_survey_data2,\"education\")\n",
        "#cleaned_survey_data2=value_to_col(cleaned_survey_data2,\"coronavirusEmployment\")\n",
        "\n",
        "cleaned_survey_data2.loc[cleaned_survey_data2['gender'].str.contains('female'), 'gender'] = 'feMale'\n",
        "temp = cleaned_survey_data2.gender.fillna(\"0\")\n",
        "\n",
        "cleaned_survey_data2.loc[:,'female'] = np.where(temp.str.contains(\"feMale\"),1,0)\n",
        "cleaned_survey_data2.loc[:,'male'] = np.where(temp.str.contains(\"male\"),1,0)\n",
        "cleaned_survey_data2 = cleaned_survey_data2.drop(columns=['education', 'religion', 'ethnicity','gender'])\n",
        "\n",
        "cleaned_survey_data2.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  iloc._setitem_with_indexer(indexer, value)\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:10: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  # Remove the CWD from sys.path while we load stuff.\n",
            "/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py:1596: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  self.obj[key] = _infer_fill_value(value)\n",
            "/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py:1743: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  isetter(ilocs[0], value)\n",
            "/usr/local/lib/python3.6/dist-packages/pandas/core/indexing.py:1763: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  isetter(loc, value)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1339</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1091</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1627</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1757</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      religion_catholic  religion_nothing-in-particular  ...  female  male\n",
              "489                   0                               1  ...       1     0\n",
              "136                   0                               0  ...       0     1\n",
              "1339                  0                               0  ...       1     0\n",
              "1091                  0                               0  ...       1     0\n",
              "1627                  0                               0  ...       1     0\n",
              "1757                  0                               1  ...       1     0\n",
              "\n",
              "[6 rows x 25 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 202
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "55lAVkrn11rr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "outputId": "ae366696-7616-41d1-fc7d-ab585256fe71"
      },
      "source": [
        "concat = pd.concat([cleaned_survey_data2, cleaned_survey_data], axis=1)\n",
        "print(len(concat))\n",
        "concat.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "16375\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusEmployment</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>coronavirusSymptoms</th>\n",
              "      <th>coronavirusWhenShouldReopen</th>\n",
              "      <th>education</th>\n",
              "      <th>ethnicity</th>\n",
              "      <th>gender</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religion</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>startTime</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>location.id</th>\n",
              "      <th>annualHouseholdIncome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>now-full</td>\n",
              "      <td>89.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-yr</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>2020-05-28T22:44:31Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>10000000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5.2</td>\n",
              "      <td>was-full</td>\n",
              "      <td>72.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>male</td>\n",
              "      <td>0.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.1</td>\n",
              "      <td>agnostic</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2020-05-28T22:37:49Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>75000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1339</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>62.0</td>\n",
              "      <td>muscle-ache</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>some-college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.2</td>\n",
              "      <td>5.8</td>\n",
              "      <td>4.9</td>\n",
              "      <td>something-else</td>\n",
              "      <td>9.1</td>\n",
              "      <td>7.9</td>\n",
              "      <td>2020-06-11T20:24:26Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>49000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1091</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>100.0</td>\n",
              "      <td>fatigue</td>\n",
              "      <td>2-mo</td>\n",
              "      <td>highschool</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>atheist</td>\n",
              "      <td>0.7</td>\n",
              "      <td>5.7</td>\n",
              "      <td>2020-05-29T02:54:25Z</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>20842.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1627</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>now-retired</td>\n",
              "      <td>10.0</td>\n",
              "      <td>none</td>\n",
              "      <td>immediate</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.2</td>\n",
              "      <td>10.0</td>\n",
              "      <td>something-else</td>\n",
              "      <td>8.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>2020-06-10T02:25:53Z</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>150000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1757</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>was-disabled</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>3-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.7</td>\n",
              "      <td>10.0</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>7.9</td>\n",
              "      <td>10.0</td>\n",
              "      <td>2020-06-04T22:13:51Z</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>12000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      religion_catholic  ...  annualHouseholdIncome\n",
              "489                   0  ...             10000000.0\n",
              "136                   0  ...                75000.0\n",
              "1339                  0  ...                49000.0\n",
              "1091                  0  ...                20842.0\n",
              "1627                  0  ...               150000.0\n",
              "1757                  0  ...                12000.0\n",
              "\n",
              "[6 rows x 54 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 203
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3nbMtFrxShMQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "outputId": "995872a7-1b50-4627-c0c0-bbb3563501b4"
      },
      "source": [
        "policy_united_states = c3aidatalake.fetch(\n",
        "  \"locationpolicysummary\",\n",
        "  {\n",
        "      \"spec\" : {\n",
        "          \"filter\" : \"contains(location.id, 'UnitedStates')\",\n",
        "          \"include\": \"stayAtHome, mandatoryQuarantine, largeGatherings,schoolClosure,easingOrder, emergencyDeclaration, numSavedVersions\",\n",
        "          \"limit\" : -1\n",
        "      }\n",
        "  }\n",
        ")\n",
        "\n",
        "states_list = policy_united_states['id'].tolist()\n",
        "print(states_list)\n",
        "pd.set_option('display.max_colwidth', None)\n",
        "policy_united_states.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['Alaska_UnitedStates_Policy', 'Arizona_UnitedStates_Policy', 'Arkansas_UnitedStates_Policy', 'California_UnitedStates_Policy', 'Colorado_UnitedStates_Policy', 'Connecticut_UnitedStates_Policy', 'Delaware_UnitedStates_Policy', 'District of Columbia_UnitedStates_Policy', 'Florida_UnitedStates_Policy', 'Georgia_UnitedStates_Policy', 'Hawaii_UnitedStates_Policy', 'Illinois_UnitedStates_Policy', 'Indiana_UnitedStates_Policy', 'Iowa_UnitedStates_Policy', 'Kansas_UnitedStates_Policy', 'Kentucky_UnitedStates_Policy', 'Louisiana_UnitedStates_Policy', 'Maine_UnitedStates_Policy', 'Maryland_UnitedStates_Policy', 'Massachusetts_UnitedStates_Policy', 'Michigan_UnitedStates_Policy', 'Minnesota_UnitedStates_Policy', 'Mississippi_UnitedStates_Policy', 'Missouri_UnitedStates_Policy', 'Montana_UnitedStates_Policy', 'Nebraska_UnitedStates_Policy', 'Nevada_UnitedStates_Policy', 'New Hampshire_UnitedStates_Policy', 'New Jersey_UnitedStates_Policy', 'New Mexico_UnitedStates_Policy', 'New York_UnitedStates_Policy', 'North Carolina_UnitedStates_Policy', 'North Dakota_UnitedStates_Policy', 'Ohio_UnitedStates_Policy', 'Oklahoma_UnitedStates_Policy', 'Oregon_UnitedStates_Policy', 'Pennsylvania_UnitedStates_Policy', 'Rhode Island_UnitedStates_Policy', 'South Carolina_UnitedStates_Policy', 'South Dakota_UnitedStates_Policy', 'Tennessee_UnitedStates_Policy', 'Texas_UnitedStates_Policy', 'United States_UnitedStates_Policy', 'Utah_UnitedStates_Policy', 'Vermont_UnitedStates_Policy', 'Virginia_UnitedStates_Policy', 'Washington_UnitedStates_Policy', 'Wisconsin_UnitedStates_Policy', 'Wyoming_UnitedStates_Policy']\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>easingOrder</th>\n",
              "      <th>stayAtHome</th>\n",
              "      <th>mandatoryQuarantine</th>\n",
              "      <th>largeGatherings</th>\n",
              "      <th>schoolClosure</th>\n",
              "      <th>emergencyDeclaration</th>\n",
              "      <th>id</th>\n",
              "      <th>numSavedVersions</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Proceeding with Reopening</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>All Travelers</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Closed for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Alaska_UnitedStates_Policy</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>New Limit on Large Gatherings in Place</td>\n",
              "      <td>Closed for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Arizona_UnitedStates_Policy</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Paused</td>\n",
              "      <td>No Action</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Closed for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Arkansas_UnitedStates_Policy</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Statewide</td>\n",
              "      <td>No Action</td>\n",
              "      <td>All Gatherings Prohibited</td>\n",
              "      <td>Recommended Closure for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>California_UnitedStates_Policy</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>No Action</td>\n",
              "      <td>Expanded to New Limit of 25 or Fewer</td>\n",
              "      <td>Closed for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Colorado_UnitedStates_Policy</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Proceeding with Reopening</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>From Certain States (New)</td>\n",
              "      <td>Expanded to New Limit of 25 or Fewer</td>\n",
              "      <td>Closed for School Year</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Connecticut_UnitedStates_Policy</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 easingOrder  ... numSavedVersions\n",
              "0  Proceeding with Reopening  ...                5\n",
              "1   New Restrictions Imposed  ...                5\n",
              "2                     Paused  ...                4\n",
              "3   New Restrictions Imposed  ...                5\n",
              "4   New Restrictions Imposed  ...                5\n",
              "5  Proceeding with Reopening  ...                5\n",
              "\n",
              "[6 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 204
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O3cN1QLGNCD7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "outputId": "96b41a34-6628-4656-df6b-43fbd18eafc3"
      },
      "source": [
        "states_list = policy_united_states['id'].tolist()\n",
        "states_list.pop(0)\n",
        "history_policies = []\n",
        "for state in states_list:\n",
        "  if state == 'United States_UnitedStates_Policy':\n",
        "    continue\n",
        "  try:\n",
        "    policy_state = c3aidatalake.read_data_json(\n",
        "        \"locationpolicysummary\",\n",
        "        \"allversionsforpolicy\",\n",
        "        {\n",
        "        \"this\": {\n",
        "            \"id\": state\n",
        "        }\n",
        "    }\n",
        "    )\n",
        "  except:\n",
        "    print(state)\n",
        "\n",
        "  history_policies = history_policies + [policy_state]\n",
        "  \n",
        "df = pd.DataFrame(list(history_policies[0][2].items()),columns = ['column1','column2']).T\n",
        "df = df.rename(columns=df.iloc[0])\n",
        "df = df.drop(df.index[0])\n",
        "\n",
        "df3= df[['location', 'lastSavedTimestamp','stayAtHome', 'mandatoryQuarantine','largeGatherings','easingOrder','emergencyDeclaration']]\n",
        "print(len(df3))\n",
        "for i in range(len(history_policies)):\n",
        "    for j in range(len(history_policies[i])):\n",
        "        df2= pd.DataFrame(list(history_policies[i][j].items()),columns = ['column1','column2']).T\n",
        "        df2 = df2.rename(columns=df2.iloc[0])\n",
        "        df2 = df2.drop(df2.index[0])\n",
        "        df2=df2[['location', 'lastSavedTimestamp','stayAtHome', 'mandatoryQuarantine','largeGatherings','easingOrder','emergencyDeclaration']]\n",
        "        df3 = df3.append(df2)\n",
        "\n",
        "dfcount = df3['lastSavedTimestamp'].value_counts()\n",
        "df3.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Connecticut_UnitedStates_Policy\n",
            "Delaware_UnitedStates_Policy\n",
            "Georgia_UnitedStates_Policy\n",
            "Indiana_UnitedStates_Policy\n",
            "Kentucky_UnitedStates_Policy\n",
            "Louisiana_UnitedStates_Policy\n",
            "Maine_UnitedStates_Policy\n",
            "Maryland_UnitedStates_Policy\n",
            "Mississippi_UnitedStates_Policy\n",
            "New Jersey_UnitedStates_Policy\n",
            "New York_UnitedStates_Policy\n",
            "Ohio_UnitedStates_Policy\n",
            "Rhode Island_UnitedStates_Policy\n",
            "1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>location</th>\n",
              "      <th>lastSavedTimestamp</th>\n",
              "      <th>stayAtHome</th>\n",
              "      <th>mandatoryQuarantine</th>\n",
              "      <th>largeGatherings</th>\n",
              "      <th>easingOrder</th>\n",
              "      <th>emergencyDeclaration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-29T23:15:10Z</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-09-12T02:52:54Z</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>New Limit on Large Gatherings in Place</td>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-09-12T02:52:54Z</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>New Limit on Large Gatherings in Place</td>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-29T23:15:10Z</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-29T19:39:11Z</td>\n",
              "      <td>Statewide</td>\n",
              "      <td>From Certain States</td>\n",
              "      <td>&gt;10 People Prohibited</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>column2</th>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-05T04:59:27Z</td>\n",
              "      <td>Statewide</td>\n",
              "      <td>From Certain States</td>\n",
              "      <td>&gt;10 People Prohibited</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               location  ... emergencyDeclaration\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "column2  {'id': 'Arizona_UnitedStates'}  ...                  Yes\n",
              "\n",
              "[6 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RFQUyMCQZF42",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "outputId": "f16afdb9-4711-4c69-a475-3f60eecd6c35"
      },
      "source": [
        "df3= df[['location', 'lastSavedTimestamp','stayAtHome', 'mandatoryQuarantine','largeGatherings','easingOrder','emergencyDeclaration']]\n",
        "for i in range(len(history_policies)):\n",
        "    for j in range(len(history_policies[i])):\n",
        "        df2= pd.DataFrame(list(history_policies[i][j].items()),columns = ['column1','column2']).T\n",
        "        df2 = df2.rename(columns=df2.iloc[0])\n",
        "        df2 = df2.drop(df2.index[0])\n",
        "        df2=df2[['location', 'lastSavedTimestamp','stayAtHome', 'mandatoryQuarantine','largeGatherings','easingOrder','emergencyDeclaration']]\n",
        "        df3 = df3.append(df2)\n",
        "\n",
        "def value_to_col(dataframe, policy):\n",
        "    temp = dataframe[policy].fillna(0)\n",
        "    dfcount = temp.value_counts()\n",
        "    options = list(dfcount.to_frame().index.values)\n",
        "    for i in options:\n",
        "        dataframe.loc[:,policy+i]=np.where(temp.str.contains(i),1,0)\n",
        "    return dataframe\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\", 'This pattern has match groups')\n",
        "df6 = value_to_col(df3, \"stayAtHome\")\n",
        "df6 = value_to_col(df3, \"mandatoryQuarantine\")\n",
        "df6 = value_to_col(df3, \"easingOrder\")\n",
        "df6 = value_to_col(df3, \"emergencyDeclaration\")\n",
        "df6 = value_to_col(df3, \"largeGatherings\")\n",
        "\n",
        "df3 = df3.reset_index()\n",
        "a=[]\n",
        "for i in range(len(df3)):\n",
        "    a.append(df3.loc[i,'location'].get('id'))   \n",
        "df3['location.id'] = a\n",
        "df3['lastSavedTimestamp'] = pd.to_datetime(df3['lastSavedTimestamp'])\n",
        "df3['lastSavedTimestamp']= df3['lastSavedTimestamp'].dt.strftime('%Y-%m-%d %H:%M:%S')\n",
        "df3['lastSavedTimestamp'] = pd.to_datetime(df3['lastSavedTimestamp'])\n",
        "df3['lastSavedTimestamp'] = df3['lastSavedTimestamp'].apply(lambda t: t.replace(second=0))\n",
        "df3['lastSavedTimestamp'] = df3['lastSavedTimestamp'].apply(lambda t: t.replace(minute=0))\n",
        "df3['lastSavedTimestamp'] = df3['lastSavedTimestamp'].apply(lambda t: t.replace(hour=0))\n",
        "#print(df3.loc[0,'lastSavedTimestamp']<df3.loc[1,'lastSavedTimestamp'])\n",
        "#print(df3['lastSavedTimestamp'].value_counts())\n",
        "print(len(df3))\n",
        "df3=df3.loc[df3.astype(str).drop_duplicates().index]\n",
        "df3.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "280\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>location</th>\n",
              "      <th>lastSavedTimestamp</th>\n",
              "      <th>stayAtHome</th>\n",
              "      <th>mandatoryQuarantine</th>\n",
              "      <th>largeGatherings</th>\n",
              "      <th>easingOrder</th>\n",
              "      <th>emergencyDeclaration</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "      <th>location.id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-09-12</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>New Limit on Large Gatherings in Place</td>\n",
              "      <td>New Restrictions Imposed</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>Statewide</td>\n",
              "      <td>From Certain States</td>\n",
              "      <td>&gt;10 People Prohibited</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arizona_UnitedStates'}</td>\n",
              "      <td>2020-05-05</td>\n",
              "      <td>Statewide</td>\n",
              "      <td>From Certain States</td>\n",
              "      <td>&gt;10 People Prohibited</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arkansas_UnitedStates'}</td>\n",
              "      <td>2020-09-12</td>\n",
              "      <td>No Action</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Lifted</td>\n",
              "      <td>Paused</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arkansas_UnitedStates</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>column2</td>\n",
              "      <td>{'id': 'Arkansas_UnitedStates'}</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>No Action</td>\n",
              "      <td>From Certain States</td>\n",
              "      <td>&gt;10 People Prohibited</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arkansas_UnitedStates</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     index  ...            location.id\n",
              "0  column2  ...   Arizona_UnitedStates\n",
              "1  column2  ...   Arizona_UnitedStates\n",
              "4  column2  ...   Arizona_UnitedStates\n",
              "5  column2  ...   Arizona_UnitedStates\n",
              "7  column2  ...  Arkansas_UnitedStates\n",
              "9  column2  ...  Arkansas_UnitedStates\n",
              "\n",
              "[6 rows x 45 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yN9--ZpMGwPs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "outputId": "59d96071-88b5-4f24-d8a9-37dceeceea23"
      },
      "source": [
        "concat[[\"coronavirusConcern\",\"hasCoronavirusBelief\",\"politicalBelief\",\"politicalParty\",\"religiosity\",\"trumpApproval\"]] /= 10\n",
        "concat['startTime'] = pd.to_datetime(concat['startTime'])\n",
        "concat['startTime']= concat['startTime'].dt.strftime('%Y-%m-%d %H:%M:%S')\n",
        "concat['startTime'] = pd.to_datetime(concat['startTime'])\n",
        "concat['startTime'] = concat['startTime'].apply(lambda t: t.replace(second=0))\n",
        "concat['startTime'] = concat['startTime'].apply(lambda t: t.replace(minute=0))\n",
        "concat['startTime'] = concat['startTime'].apply(lambda t: t.replace(hour=0))\n",
        "concat.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusEmployment</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>coronavirusSymptoms</th>\n",
              "      <th>coronavirusWhenShouldReopen</th>\n",
              "      <th>education</th>\n",
              "      <th>ethnicity</th>\n",
              "      <th>gender</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religion</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>startTime</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>location.id</th>\n",
              "      <th>annualHouseholdIncome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.59</td>\n",
              "      <td>now-full</td>\n",
              "      <td>89.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-yr</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.00</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.46</td>\n",
              "      <td>2020-05-28</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>10000000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.52</td>\n",
              "      <td>was-full</td>\n",
              "      <td>72.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>male</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.51</td>\n",
              "      <td>agnostic</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.13</td>\n",
              "      <td>2020-05-28</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>75000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1339</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.56</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>62.0</td>\n",
              "      <td>muscle-ache</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>some-college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.49</td>\n",
              "      <td>something-else</td>\n",
              "      <td>0.91</td>\n",
              "      <td>0.79</td>\n",
              "      <td>2020-06-11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>49000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1091</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.40</td>\n",
              "      <td>now-jobless</td>\n",
              "      <td>100.0</td>\n",
              "      <td>fatigue</td>\n",
              "      <td>2-mo</td>\n",
              "      <td>highschool</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.32</td>\n",
              "      <td>atheist</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.57</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>20842.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1627</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>now-retired</td>\n",
              "      <td>10.0</td>\n",
              "      <td>none</td>\n",
              "      <td>immediate</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.42</td>\n",
              "      <td>1.00</td>\n",
              "      <td>something-else</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.00</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>150000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1757</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>was-disabled</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>3-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.00</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.79</td>\n",
              "      <td>1.00</td>\n",
              "      <td>2020-06-04</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>12000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      religion_catholic  ...  annualHouseholdIncome\n",
              "489                   0  ...             10000000.0\n",
              "136                   0  ...                75000.0\n",
              "1339                  0  ...                49000.0\n",
              "1091                  0  ...                20842.0\n",
              "1627                  0  ...               150000.0\n",
              "1757                  0  ...                12000.0\n",
              "\n",
              "[6 rows x 54 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 207
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SDsE3WKoUvWC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "outputId": "3722b47d-5593-4307-c0ed-2e225c0ac8b0"
      },
      "source": [
        "concat2=concat.copy()\n",
        "concat2['startTime'] = pd.to_datetime(concat2['startTime'], utc = True)\n",
        "census_and_cases['date']=pd.to_datetime(census_and_cases['date'],utc=True)\n",
        "concat2 = pd.merge(right=census_and_cases, left = concat2, right_on=['state','date'],left_on=['location.id','startTime'],sort=False)\n",
        "concat2.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusEmployment</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>coronavirusSymptoms</th>\n",
              "      <th>coronavirusWhenShouldReopen</th>\n",
              "      <th>education</th>\n",
              "      <th>ethnicity</th>\n",
              "      <th>gender</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religion</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>startTime</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>location.id</th>\n",
              "      <th>annualHouseholdIncome</th>\n",
              "      <th>state</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>date</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.59</td>\n",
              "      <td>now-full</td>\n",
              "      <td>89.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-yr</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.00</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.46</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>10000000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.52</td>\n",
              "      <td>was-full</td>\n",
              "      <td>72.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>male</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.51</td>\n",
              "      <td>agnostic</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.13</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>75000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.48</td>\n",
              "      <td>now-full, now-retired</td>\n",
              "      <td>30.0</td>\n",
              "      <td>none</td>\n",
              "      <td>3-wk</td>\n",
              "      <td>highschool</td>\n",
              "      <td>black</td>\n",
              "      <td>male</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.65</td>\n",
              "      <td>0.69</td>\n",
              "      <td>nothing-in-particular</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.55</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>100000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>was-full</td>\n",
              "      <td>93.0</td>\n",
              "      <td>diarrhea, nausea-vomit</td>\n",
              "      <td>1-wk</td>\n",
              "      <td>school</td>\n",
              "      <td>black</td>\n",
              "      <td>female</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.15</td>\n",
              "      <td>catholic</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.10</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>35000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>now-disabled</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>some-college</td>\n",
              "      <td>black</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.00</td>\n",
              "      <td>evangelical-protestant</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.03</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>48000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>was-full</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>3-mo</td>\n",
              "      <td>some-college</td>\n",
              "      <td>black</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>catholic</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.38</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>19000.0</td>\n",
              "      <td>Alabama_UnitedStates</td>\n",
              "      <td>0.273277</td>\n",
              "      <td>0.110575</td>\n",
              "      <td>2020-05-28 00:00:00+00:00</td>\n",
              "      <td>0.041593</td>\n",
              "      <td>0.018964</td>\n",
              "      <td>0.333169</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   religion_catholic  ...  death_rate\n",
              "0                  0  ...    0.333169\n",
              "1                  0  ...    0.333169\n",
              "2                  0  ...    0.333169\n",
              "3                  1  ...    0.333169\n",
              "4                  0  ...    0.333169\n",
              "5                  1  ...    0.333169\n",
              "\n",
              "[6 rows x 61 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 208
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KLOXUpOKhusg"
      },
      "source": [
        "final_df=concat2.copy()\n",
        "final_df['startTime'] = pd.to_datetime(final_df['startTime'])\n",
        "final_df['startTime'] = final_df['startTime'].dt.tz_localize(None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AEQA7zK9fteX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "031437cd-469b-499f-d28a-0e6f663f81ab"
      },
      "source": [
        "temp = []\n",
        "import datetime\n",
        "time = list(pd.to_datetime(final_df['startTime']))\n",
        "df3=df3.rename(columns={\"lastSavedTimestamp\": \"time\"})\n",
        "print(df3.head(6))\n",
        "df3 = df3[df3['time'] < datetime.datetime(2020,9,12)]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "     index  ...            location.id\n",
            "0  column2  ...   Arizona_UnitedStates\n",
            "1  column2  ...   Arizona_UnitedStates\n",
            "4  column2  ...   Arizona_UnitedStates\n",
            "5  column2  ...   Arizona_UnitedStates\n",
            "7  column2  ...  Arkansas_UnitedStates\n",
            "9  column2  ...  Arkansas_UnitedStates\n",
            "\n",
            "[6 rows x 45 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y0Az0ViOHLb1"
      },
      "source": [
        "temp=[]\n",
        "for i in range(len(final_df)):\n",
        "  if (time[i].date()<datetime.date(2020,5,29)):\n",
        "    temp.append(datetime.datetime(2020,5,5))\n",
        "  elif ((time[i].date()>= datetime.date(2020,5,29)) & (time[i].date()<= datetime.date(2020,9,12))):\n",
        "    temp.append(datetime.datetime(2020,5,29))\n",
        "  elif (time[i].date()>datetime.date(2020,9,12)):\n",
        "    temp.append(datetime.datetime(2020,9,12))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LsonIlGaE3Qm"
      },
      "source": [
        "df2 = pd.DataFrame(index=final_df.index)\n",
        "df2['temp']=temp\n",
        "final_df['time']=df2['temp']\n",
        "final_df['Time_Diff'] = (pd.to_datetime(final_df.startTime) - pd.to_datetime(final_df.time)).dt.days\n",
        "states = list(df3['location.id'].value_counts().to_frame().index.values)\n",
        "states2= list(final_df['location.id'].value_counts().to_frame().index.values)\n",
        "main_list = list(set(states2) - set(states))\n",
        "for i in main_list:\n",
        "  final_df = final_df[final_df['location.id'] != i]\n",
        "df3=df3.drop_duplicates(subset=['location.id','time']) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iWNWJapzaLT3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 431
        },
        "outputId": "a7900ba5-e736-4c7c-e926-54228691994f"
      },
      "source": [
        "final_df.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusEmployment</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>coronavirusSymptoms</th>\n",
              "      <th>coronavirusWhenShouldReopen</th>\n",
              "      <th>education</th>\n",
              "      <th>ethnicity</th>\n",
              "      <th>gender</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religion</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>startTime</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>location.id</th>\n",
              "      <th>annualHouseholdIncome</th>\n",
              "      <th>state</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>date</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>time</th>\n",
              "      <th>Time_Diff</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.72</td>\n",
              "      <td>was-full</td>\n",
              "      <td>47.0</td>\n",
              "      <td>none</td>\n",
              "      <td>immediate</td>\n",
              "      <td>postgrad</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.49</td>\n",
              "      <td>catholic</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.25</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>54000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.90</td>\n",
              "      <td>now-full</td>\n",
              "      <td>41.0</td>\n",
              "      <td>diarrhea, muscle-ache, fatigue, nasal, sore-throat, headache, nausea-vomit, lost-smell-taste, fever, dry-cough, short-breath</td>\n",
              "      <td>6-mo</td>\n",
              "      <td>highschool</td>\n",
              "      <td>black</td>\n",
              "      <td>female</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.48</td>\n",
              "      <td>catholic</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>1000000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>320</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>now-full</td>\n",
              "      <td>100.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-wk</td>\n",
              "      <td>college</td>\n",
              "      <td>hispanic-latino</td>\n",
              "      <td>male</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>other-protestant</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.36</td>\n",
              "      <td>was-full, now-full</td>\n",
              "      <td>71.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-yr</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.17</td>\n",
              "      <td>other-protestant</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.03</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.64</td>\n",
              "      <td>now-full</td>\n",
              "      <td>99.0</td>\n",
              "      <td>none</td>\n",
              "      <td>1-mo</td>\n",
              "      <td>highschool</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.38</td>\n",
              "      <td>0.49</td>\n",
              "      <td>something-else</td>\n",
              "      <td>0.82</td>\n",
              "      <td>0.34</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>18000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07</td>\n",
              "      <td>was-part, now-part</td>\n",
              "      <td>0.0</td>\n",
              "      <td>none</td>\n",
              "      <td>immediate</td>\n",
              "      <td>college</td>\n",
              "      <td>white</td>\n",
              "      <td>female</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.79</td>\n",
              "      <td>1.00</td>\n",
              "      <td>evangelical-protestant</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>2020-06-10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>125000.0</td>\n",
              "      <td>Arizona_UnitedStates</td>\n",
              "      <td>0.0583</td>\n",
              "      <td>0.169164</td>\n",
              "      <td>2020-06-10 00:00:00+00:00</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>2020-05-29</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     religion_catholic  religion_nothing-in-particular  ...       time  Time_Diff\n",
              "318                  1                               0  ... 2020-05-29         12\n",
              "319                  1                               0  ... 2020-05-29         12\n",
              "320                  0                               0  ... 2020-05-29         12\n",
              "321                  0                               0  ... 2020-05-29         12\n",
              "322                  0                               0  ... 2020-05-29         12\n",
              "323                  0                               0  ... 2020-05-29         12\n",
              "\n",
              "[6 rows x 63 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pZJ4z8AfiqxH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 326
        },
        "outputId": "cdccd825-9b8c-4f98-d207-52168424f8aa"
      },
      "source": [
        "merged =  final_df.merge(df3, on=['time','location.id'], how='left',sort=False)\n",
        "numeric_final = merged.drop(columns = ['time','location.id','startTime','education','gender','ethnicity','religion','coronavirusEmployment','coronavirusWhenShouldReopen',\n",
        "                                       'mandatoryQuarantine','stayAtHome','location','largeGatherings','easingOrder','emergencyDeclaration','coronavirusSymptoms',\"annualHouseholdIncome\",\"index\"])\n",
        "numeric_final.apply(lambda numeric_final: pd.to_numeric(numeric_final, errors='coerce').notnull().all())\n",
        "numeric_final.head(6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>...</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.72</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.90</td>\n",
              "      <td>41.0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.36</td>\n",
              "      <td>71.0</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.64</td>\n",
              "      <td>99.0</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.38</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.82</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.79</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6 rows × 88 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   religion_catholic  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0                  1  ...                                                 0\n",
              "1                  1  ...                                                 0\n",
              "2                  0  ...                                                 0\n",
              "3                  0  ...                                                 0\n",
              "4                  0  ...                                                 0\n",
              "5                  0  ...                                                 0\n",
              "\n",
              "[6 rows x 88 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nKEjXcxKpCmF"
      },
      "source": [
        "numeric_final['Time_Diff']=(numeric_final['Time_Diff']-min(numeric_final['Time_Diff']))/(max(numeric_final['Time_Diff'])-min(numeric_final['Time_Diff']))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ye6c3IivfQgf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bcbf4932-eed0-4c53-8ffe-05d5f05b28fe"
      },
      "source": [
        "numeric_final= numeric_final.drop(columns=['state','date'])\n",
        "print(numeric_final.dtypes['stayAtHomeHigh-Risk Groups'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "int64\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x35Ec765ire_"
      },
      "source": [
        "# Training Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cv1GmoRjbeaL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 176
        },
        "outputId": "4ec96278-ba7a-4e32-aa4b-28e4cf385805"
      },
      "source": [
        "numeric_final.head(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>...</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.72</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>0.521739</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1 rows × 86 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   religion_catholic  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0                  1  ...                                                 0\n",
              "\n",
              "[1 rows x 86 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R8J3oNRAitTt"
      },
      "source": [
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "import tensorflow as tf\n",
        "from numpy import asarray\n",
        "from sklearn.utils import shuffle\n",
        "from sklearn.linear_model import LinearRegression"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g3MBsouaSVnt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "outputId": "a45cf7a6-ced8-4bc1-fb92-c43e019b1336"
      },
      "source": [
        "print(numeric_final.shape)\n",
        "numeric_final.head(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(11014, 86)\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_atheist</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_white</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_college</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>...</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.72</td>\n",
              "      <td>47.0</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>0.521739</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.90</td>\n",
              "      <td>41.0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>0.521739</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.075849</td>\n",
              "      <td>0.035524</td>\n",
              "      <td>0.345591</td>\n",
              "      <td>0.521739</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3 rows × 86 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   religion_catholic  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0                  1  ...                                                 0\n",
              "1                  1  ...                                                 0\n",
              "2                  0  ...                                                 0\n",
              "\n",
              "[3 rows x 86 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 219
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bxXtbuM60FHW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8b72e398-6685-4a2a-d3ec-864c67a2f7c4"
      },
      "source": [
        "rows_with_nan = []\n",
        "for index, row in numeric_final.iterrows():\n",
        "    is_nan_series = row.isnull()\n",
        "    if is_nan_series.any():\n",
        "        rows_with_nan.append(index)\n",
        "\n",
        "print(len(rows_with_nan))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zTYjrgjG0cRE"
      },
      "source": [
        "numeric_final = numeric_final.drop(index = rows_with_nan)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nICtPb5bybyB"
      },
      "source": [
        "y_labels = numeric_final[\"coronavirusIntent_Mask\"]\n",
        "X_model_features = numeric_final.drop([\"coronavirusIntent_Mask\"],axis = 1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8-PVT7Jd2fM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2970dd24-5678-44d0-d502-94e76583190e"
      },
      "source": [
        "print(X_model_features.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(11014, 85)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yMmBUjOck_8Q"
      },
      "source": [
        "indices_header = y_labels -1\n",
        "one_hot = tf.one_hot(indices_header,100,dtype = tf.uint8)\n",
        "Y_model_labels = asarray(one_hot)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2dOEx5Rp043U",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d670cb0-8853-4bc9-c13a-7d9b86f070a5"
      },
      "source": [
        "print(Y_model_labels)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 1]\n",
            " ...\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 0]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "esLucpoOmIzX"
      },
      "source": [
        "X_model_features, Y_model_labels = shuffle(X_model_features, Y_model_labels)\n",
        "X_model_features, Y_model_labels = shuffle(X_model_features, Y_model_labels)\n",
        "X_model_features, Y_model_labels = shuffle(X_model_features, Y_model_labels)\n",
        "X_model_features, Y_model_labels = shuffle(X_model_features, Y_model_labels)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oQcklYy6tsS6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4d527408-29c6-43e8-cb6b-eb01122f4f9f"
      },
      "source": [
        "print(Y_model_labels)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 1]\n",
            " [0 0 0 ... 0 0 1]\n",
            " ...\n",
            " [0 0 0 ... 0 0 0]\n",
            " [0 0 0 ... 0 0 1]\n",
            " [0 0 0 ... 0 0 0]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hkbBj8OTitRA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "62ba880f-e97e-43b8-ec08-9c57771cf03e"
      },
      "source": [
        "INPUT_DIM = X_model_features.shape[1]\n",
        "print(INPUT_DIM)\n",
        "LEARNING_RATE = 0.001"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "85\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "isSNQDmuitO5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6bf89f35-219f-4831-d7bf-d578c92cf370"
      },
      "source": [
        "# Neural network\n",
        "first_model = Sequential()\n",
        "\n",
        "first_model.add(Dense(128, input_dim=INPUT_DIM, activation=\"relu\"))\n",
        "first_model.add(Dense(64, activation=\"relu\"))\n",
        "first_model.add(Dense(100, activation=\"softmax\"))\n",
        "opt = keras.optimizers.Adam(learning_rate=LEARNING_RATE)\n",
        "first_model.compile(loss='categorical_crossentropy', optimizer=opt, metrics=['accuracy'])\n",
        "first_model.summary()\n",
        "weights = first_model.get_weights()\n",
        "#print(weights)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_3 (Dense)              (None, 128)               11008     \n",
            "_________________________________________________________________\n",
            "dense_4 (Dense)              (None, 64)                8256      \n",
            "_________________________________________________________________\n",
            "dense_5 (Dense)              (None, 100)               6500      \n",
            "=================================================================\n",
            "Total params: 25,764\n",
            "Trainable params: 25,764\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dGKLkldxitCA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5158a42f-8097-4149-e6d6-37409154c2e9"
      },
      "source": [
        "history_model = first_model.fit(X_model_features, Y_model_labels, validation_split=0.2,epochs=10, batch_size=6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            "1469/1469 [==============================] - 3s 2ms/step - loss: 3.3629 - accuracy: 0.3212 - val_loss: 3.2947 - val_accuracy: 0.3164\n",
            "Epoch 2/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 4.1571 - accuracy: 0.2940 - val_loss: 7.0472 - val_accuracy: 0.1089\n",
            "Epoch 3/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 19.6162 - accuracy: 0.1715 - val_loss: 33.2782 - val_accuracy: 0.3073\n",
            "Epoch 4/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 59.2948 - accuracy: 0.1343 - val_loss: 91.4471 - val_accuracy: 0.0068\n",
            "Epoch 5/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 108.4118 - accuracy: 0.1294 - val_loss: 129.7806 - val_accuracy: 0.0036\n",
            "Epoch 6/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 166.6763 - accuracy: 0.1260 - val_loss: 220.1520 - val_accuracy: 0.0086\n",
            "Epoch 7/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 242.5825 - accuracy: 0.1262 - val_loss: 255.7003 - val_accuracy: 0.0091\n",
            "Epoch 8/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 334.9890 - accuracy: 0.1238 - val_loss: 384.4913 - val_accuracy: 0.3164\n",
            "Epoch 9/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 427.2556 - accuracy: 0.1216 - val_loss: 541.3745 - val_accuracy: 0.0159\n",
            "Epoch 10/10\n",
            "1469/1469 [==============================] - 2s 2ms/step - loss: 557.4230 - accuracy: 0.1267 - val_loss: 652.0096 - val_accuracy: 0.0041\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SZr7gOGTRXWh"
      },
      "source": [
        "# Test out multivariate regression"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X66TQxrjRbKj"
      },
      "source": [
        "total_data = numeric_final.copy()\n",
        "total_data=numeric_final.drop(columns=['religion_atheist','ethnicity_white','education_college','stayAtHomeStatewide',\n",
        "                                      'mandatoryQuarantineNo Action','easingOrderYes','largeGatherings>10 People Prohibited'])\n",
        "total_data['Time_Diff']=(total_data['Time_Diff']-min(total_data['Time_Diff']))/(max(total_data['Time_Diff'])-min(total_data['Time_Diff']))\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IT_l31dnRbNg"
      },
      "source": [
        "# Shuffle data around\n",
        "total_data = total_data.sample(frac = 1).reset_index(drop=True)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eQsbs0zZdiqk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9c6c9ecb-6f54-4c20-fdba-d66d8535763d"
      },
      "source": [
        "print(len(total_data))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "11014\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DWtyiF84RbFL"
      },
      "source": [
        "test_set = total_data.tail(int(len(total_data)/10))\n",
        "train_set = total_data.head(-int(len(total_data)/10))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kJpSFuZYcjCu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "outputId": "05cad5c9-88b7-40ab-eed8-b7e35365efa1"
      },
      "source": [
        "train_set"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>education_school</th>\n",
              "      <th>female</th>\n",
              "      <th>male</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>coronavirusIntent_Mask</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>trumpApproval</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.95</td>\n",
              "      <td>42.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.47</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.311785</td>\n",
              "      <td>0.062497</td>\n",
              "      <td>0.026900</td>\n",
              "      <td>0.005325</td>\n",
              "      <td>0.113697</td>\n",
              "      <td>0.565217</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.52</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.427188</td>\n",
              "      <td>0.312046</td>\n",
              "      <td>0.334923</td>\n",
              "      <td>0.200610</td>\n",
              "      <td>0.460869</td>\n",
              "      <td>0.565217</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.57</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.47</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.75</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.401402</td>\n",
              "      <td>0.158861</td>\n",
              "      <td>0.065080</td>\n",
              "      <td>0.013021</td>\n",
              "      <td>0.114664</td>\n",
              "      <td>0.304348</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.83</td>\n",
              "      <td>96.0</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.47</td>\n",
              "      <td>0.73</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.230716</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.313233</td>\n",
              "      <td>0.144077</td>\n",
              "      <td>0.340024</td>\n",
              "      <td>0.260870</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.73</td>\n",
              "      <td>77.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.29</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.230716</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.313233</td>\n",
              "      <td>0.144077</td>\n",
              "      <td>0.340024</td>\n",
              "      <td>0.260870</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9908</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.92</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.54</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.721514</td>\n",
              "      <td>0.180514</td>\n",
              "      <td>0.057443</td>\n",
              "      <td>0.216724</td>\n",
              "      <td>0.260870</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9909</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.87</td>\n",
              "      <td>83.0</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.50</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.85</td>\n",
              "      <td>0.80</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.434127</td>\n",
              "      <td>0.059872</td>\n",
              "      <td>0.022554</td>\n",
              "      <td>0.006494</td>\n",
              "      <td>0.189328</td>\n",
              "      <td>0.869565</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9910</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.78</td>\n",
              "      <td>90.0</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.474124</td>\n",
              "      <td>0.116774</td>\n",
              "      <td>0.026771</td>\n",
              "      <td>0.018639</td>\n",
              "      <td>0.533599</td>\n",
              "      <td>0.434783</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9911</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.73</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.24</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.292546</td>\n",
              "      <td>0.531605</td>\n",
              "      <td>0.139222</td>\n",
              "      <td>0.078127</td>\n",
              "      <td>0.426979</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9912</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.57</td>\n",
              "      <td>66.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.190046</td>\n",
              "      <td>0.115610</td>\n",
              "      <td>0.016923</td>\n",
              "      <td>0.009677</td>\n",
              "      <td>0.423632</td>\n",
              "      <td>0.043478</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9913 rows × 79 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      religion_catholic  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0                     0  ...                                                 0\n",
              "1                     1  ...                                                 0\n",
              "2                     0  ...                                                 0\n",
              "3                     0  ...                                                 0\n",
              "4                     1  ...                                                 0\n",
              "...                 ...  ...                                               ...\n",
              "9908                  0  ...                                                 0\n",
              "9909                  1  ...                                                 0\n",
              "9910                  0  ...                                                 0\n",
              "9911                  0  ...                                                 0\n",
              "9912                  0  ...                                                 0\n",
              "\n",
              "[9913 rows x 79 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 310
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LthtjFMqYJff"
      },
      "source": [
        "Y_train = train_set[[\"coronavirusIntent_Mask\"]]\n",
        "X_train = train_set.drop(columns = [\"coronavirusIntent_Mask\"])\n",
        "Y_test = test_set[\"coronavirusIntent_Mask\"]\n",
        "X_test = test_set.drop(columns = [\"coronavirusIntent_Mask\"])\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nSnSBE6EhJNw"
      },
      "source": [
        "headers = X_train.head(0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nrp9jI8UYJ2Q",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7438f0e2-864a-4ca5-9d7a-4480553d1230"
      },
      "source": [
        "lr = LinearRegression()\n",
        "lr.fit(X_train,Y_train)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 313
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8y4pcbMqf1Me",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "77e98f1a-5b21-4576-a691-4789b3cbc86c"
      },
      "source": [
        "lr.coef_[0]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-2.22277211e+00, -2.96211215e+00, -5.41424089e+00, -4.05378929e+00,\n",
              "       -5.73697722e+00, -1.73035274e+00, -2.81346879e+00, -1.07676549e+01,\n",
              "       -4.29295581e+00, -7.48817807e+00, -5.66637381e+00, -5.12314374e+00,\n",
              "        2.32671371e+00,  2.32695687e+00,  2.05907633e+00,  6.22458945e+00,\n",
              "       -2.43724843e+00, -1.63682687e+00,  2.33647393e+00, -2.21284310e+00,\n",
              "        4.06437805e+00,  3.01926109e+00,  4.67394846e+01, -6.60183694e-01,\n",
              "        1.40482301e-01,  3.77692326e+00,  8.93747459e+00, -1.30385142e+01,\n",
              "       -4.60991693e+00, -4.20303571e+00, -1.49817682e+00, -6.73339401e-02,\n",
              "        5.20004047e+00,  2.58619043e+00,  3.56114445e+00,  1.86019506e+00,\n",
              "       -1.96036443e+00,  5.72342528e+00,  5.83840036e-01,  1.26408711e+00,\n",
              "       -1.64233002e-01,  1.47315166e-01, -7.90577845e+00,  5.74992861e+01,\n",
              "       -1.66482622e+00, -1.10129766e-01, -2.52456331e+00, -5.25391817e+00,\n",
              "        4.43886393e+00, -4.90339053e+00, -1.11022302e-16, -3.55271368e-15,\n",
              "       -5.32907052e-15,  1.98545326e-01, -3.03806537e+00,  2.83536321e+00,\n",
              "       -9.16664011e-02,  4.35579546e-01,  8.88178420e-16, -1.77635684e-15,\n",
              "       -6.20260474e-01,  8.88178420e-16,  2.22044605e-16, -8.88178420e-16,\n",
              "        0.00000000e+00,  0.00000000e+00,  0.00000000e+00, -1.72910554e+00,\n",
              "       -6.71542625e+00, -1.46247311e+00, -2.82262364e+00,  0.00000000e+00,\n",
              "        0.00000000e+00, -2.38487853e+00, -2.17482239e+00, -7.04635160e-01,\n",
              "        5.30055071e-01,  0.00000000e+00])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 314
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YikxyM8yfNoK"
      },
      "source": [
        "pred = lr.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z30njxU2mHpa"
      },
      "source": [
        "heads = []\n",
        "for col in headers.columns:\n",
        "  heads = heads + [col]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kOXZ13J7k4r0"
      },
      "source": [
        "coeff = pd.DataFrame([lr.coef_[0]],columns = heads)\n",
        "sorted_coeff_survey = coeff.sort_values(by=0, ascending=False, axis=1)\n",
        "sorted_coeff_survey\n",
        "from google.colab import files\n",
        "#sorted_coeff.to_csv('filename.csv') \n",
        "#files.download(\"filename.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "giqCB8iLfTh4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c82a68a9-f6c5-443e-f89b-4b1b3b117385"
      },
      "source": [
        "print(Y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "9913      97.0\n",
            "9914      97.0\n",
            "9915      18.0\n",
            "9916      25.0\n",
            "9917       3.0\n",
            "         ...  \n",
            "11009    100.0\n",
            "11010    100.0\n",
            "11011    100.0\n",
            "11012     61.0\n",
            "11013     97.0\n",
            "Name: coronavirusIntent_Mask, Length: 1101, dtype: float64\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MWxRvmCUkbGk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5340f105-6b11-4414-86a6-db8305a37ac5"
      },
      "source": [
        "tweets=pd.read_csv(\"https://raw.githubusercontent.com/alicezhang09/Cell-Painting/master/filtered_tweets.csv\")\n",
        "print(tweets.columns)\n",
        "# dtime = tweet['created_at']\n",
        "check=tweets\n",
        "count_tweets= check['user_location'].value_counts()\n",
        "check[\"created_at\"] = check[\"created_at\"].astype('datetime64[ns]') \n",
        "check[\"created_at\"] = check.created_at.dt.to_pydatetime()\n",
        "check[\"created_at\"] = check[\"created_at\"].apply(lambda t: t.replace(second=0))\n",
        "check[\"created_at\"] = check[\"created_at\"].apply(lambda t: t.replace(minute=0))\n",
        "check[\"created_at\"] = check[\"created_at\"].apply(lambda t: t.replace(hour=0))\n",
        "census_and_cases = pd.merge(left=census_by_state2[['state','Median','Total']], right = state_cases, left_on='state',right_on='state')\n",
        "census_and_cases['date'] = census_and_cases['date'].dt.strftime('%Y-%m-%d')\n",
        "count_tweet_dates = check['created_at'].value_counts()\n",
        "check['created_at']=check['created_at'].dt.strftime('%Y-%m-%d')\n",
        "print(df3['time'])\n",
        "df3['time']=pd.to_datetime(df3['time'])\n",
        "tweets_and_cases= pd.merge(right=census_and_cases, left = check, right_on=['state','date'],left_on=['user_location','created_at'],sort=False, how = 'left')\n",
        "\n",
        "tweets_num = tweets_and_cases.select_dtypes(include=[np.number])\n",
        "tweets_norm= (tweets_num-tweets_num.min())/(tweets_num.max()-tweets_num.min())\n",
        "tweets_and_cases[tweets_norm.columns] = tweets_norm\n",
        "tweets_and_cases = tweets_and_cases.drop(columns=['user_location', 'user_verified', 'id'])\n",
        "\n",
        "temp2 = []\n",
        "time2 = list(pd.to_datetime(tweets_and_cases['date']))\n",
        "for i in range(len(tweets_and_cases)):\n",
        "  if (time2[i].date()<datetime.date(2020,5,29)):\n",
        "    temp2.append(datetime.datetime(2020,5,5))\n",
        "  else:\n",
        "    temp2.append(datetime.datetime(2020,5,29))\n",
        "\n",
        "tweet_copy = pd.DataFrame(index=tweets_and_cases.index)\n",
        "tweet_copy['temp']=temp2\n",
        "tweets_and_cases['time']=tweet_copy['temp']\n",
        "tweets_and_cases['Time_Diff'] = (pd.to_datetime(tweets_and_cases.date) - pd.to_datetime(tweets_and_cases.time)).dt.days\n",
        "tweets_and_cases=tweets_and_cases.dropna()\n",
        "tweets_and_cases['state']=tweets_and_cases['state']+\"_UnitedStates\"\n",
        "states4 = list(df3['location.id'].value_counts().to_frame().index.values)\n",
        "states5= list(tweets_and_cases['state'].value_counts().to_frame().index.values)\n",
        "main_list = list(set(states5) - set(states4))\n",
        "for i in main_list:\n",
        "  tweets_and_cases = tweets_and_cases[tweets_and_cases['state'] != i]\n",
        "\n",
        "tweets_and_cases = tweets_and_cases.rename(columns={'state': 'location.id'})  \n",
        "merged =  tweets_and_cases.merge(df3, on=['time','location.id'], how='left',sort=False)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Index(['created_at', 'id', 'retweet_count', 'user_followers_count',\n",
            "       'user_location', 'user_verified', 'sentiment'],\n",
            "      dtype='object')\n",
            "0     2020-05-29\n",
            "5     2020-05-05\n",
            "9     2020-05-29\n",
            "11    2020-05-05\n",
            "14    2020-05-29\n",
            "         ...    \n",
            "267   2020-05-05\n",
            "271   2020-05-29\n",
            "273   2020-05-05\n",
            "277   2020-05-29\n",
            "279   2020-05-05\n",
            "Name: time, Length: 68, dtype: datetime64[ns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GBtRRzr9HwJv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "57a89673-da3b-43fb-aace-0b05b62ba547"
      },
      "source": [
        "#merged=merged.drop(columns=['created_at','location.id','date','stayAtHome', 'mandatoryQuarantine','largeGatherings','easingOrder','emergencyDeclaration','index','time','location'])\n",
        "merged['Time_Diff']=(merged['Time_Diff']-min(merged['Time_Diff']))/(max(merged['Time_Diff'])-min(merged['Time_Diff']))\n",
        "merged.head(6)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>user_followers_count</th>\n",
              "      <th>sentiment</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.008567</td>\n",
              "      <td>0.000536</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.407437</td>\n",
              "      <td>0.066148</td>\n",
              "      <td>0.049888</td>\n",
              "      <td>0.017920</td>\n",
              "      <td>0.210767</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.013054</td>\n",
              "      <td>0.000003</td>\n",
              "      <td>0.708333</td>\n",
              "      <td>0.182415</td>\n",
              "      <td>0.115610</td>\n",
              "      <td>0.030392</td>\n",
              "      <td>0.016122</td>\n",
              "      <td>0.360180</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.115007</td>\n",
              "      <td>0.000014</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.285881</td>\n",
              "      <td>0.531605</td>\n",
              "      <td>0.145757</td>\n",
              "      <td>0.080216</td>\n",
              "      <td>0.384665</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.000168</td>\n",
              "      <td>0.000899</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.264654</td>\n",
              "      <td>0.131296</td>\n",
              "      <td>0.067933</td>\n",
              "      <td>0.047449</td>\n",
              "      <td>0.515199</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.000046</td>\n",
              "      <td>0.000021</td>\n",
              "      <td>0.421591</td>\n",
              "      <td>0.223469</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.295258</td>\n",
              "      <td>0.137672</td>\n",
              "      <td>0.309503</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000116</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.282886</td>\n",
              "      <td>0.313739</td>\n",
              "      <td>0.196920</td>\n",
              "      <td>0.181818</td>\n",
              "      <td>0.722332</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   retweet_count  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0       0.008567  ...                                                 0\n",
              "1       0.013054  ...                                                 0\n",
              "2       0.115007  ...                                                 0\n",
              "3       0.000168  ...                                                 0\n",
              "4       0.000046  ...                                                 0\n",
              "5       0.000000  ...                                                 0\n",
              "\n",
              "[6 rows x 45 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 324
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cA1yj4snJAV1"
      },
      "source": [
        "# Test out multivariate regression"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zJig9Qz3JAV6"
      },
      "source": [
        "total_data = merged"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RV-XDT3oJAWC"
      },
      "source": [
        "# Shuffle data around\n",
        "total_data = total_data.sample(frac = 1).reset_index(drop=True)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "52XBSJ_TJAWG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e762a0b-6448-43de-cc82-aa5e984d02d3"
      },
      "source": [
        "print(len(total_data))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "53383\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T79QdOJvJAWL"
      },
      "source": [
        "test_set = total_data.tail(int(len(total_data)/10))\n",
        "train_set = total_data.head(-int(len(total_data)/10))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7Izg5CKaJAWP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "outputId": "b52ecf3f-aa56-4f67-d0cc-be585b0590db"
      },
      "source": [
        "train_set"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>user_followers_count</th>\n",
              "      <th>sentiment</th>\n",
              "      <th>Median</th>\n",
              "      <th>Total</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000297</td>\n",
              "      <td>0.600000</td>\n",
              "      <td>0.356780</td>\n",
              "      <td>0.129131</td>\n",
              "      <td>0.025073</td>\n",
              "      <td>0.017233</td>\n",
              "      <td>0.495671</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.003185</td>\n",
              "      <td>0.000105</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.223469</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.351822</td>\n",
              "      <td>0.154938</td>\n",
              "      <td>0.286158</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.000042</td>\n",
              "      <td>0.000027</td>\n",
              "      <td>0.568182</td>\n",
              "      <td>0.223469</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.359759</td>\n",
              "      <td>0.158502</td>\n",
              "      <td>0.286343</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000001</td>\n",
              "      <td>0.300000</td>\n",
              "      <td>0.365876</td>\n",
              "      <td>0.241620</td>\n",
              "      <td>0.166846</td>\n",
              "      <td>0.194114</td>\n",
              "      <td>0.938667</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.000929</td>\n",
              "      <td>0.000005</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.264654</td>\n",
              "      <td>0.131296</td>\n",
              "      <td>0.047636</td>\n",
              "      <td>0.031164</td>\n",
              "      <td>0.473307</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48040</th>\n",
              "      <td>0.000004</td>\n",
              "      <td>0.000013</td>\n",
              "      <td>0.479167</td>\n",
              "      <td>0.365876</td>\n",
              "      <td>0.241620</td>\n",
              "      <td>0.118791</td>\n",
              "      <td>0.143623</td>\n",
              "      <td>0.977801</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48041</th>\n",
              "      <td>0.020760</td>\n",
              "      <td>0.000064</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.721514</td>\n",
              "      <td>0.200953</td>\n",
              "      <td>0.060824</td>\n",
              "      <td>0.161268</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48042</th>\n",
              "      <td>0.085402</td>\n",
              "      <td>0.000012</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.423700</td>\n",
              "      <td>0.251566</td>\n",
              "      <td>0.095144</td>\n",
              "      <td>0.034696</td>\n",
              "      <td>0.216691</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48043</th>\n",
              "      <td>0.000004</td>\n",
              "      <td>0.000080</td>\n",
              "      <td>0.700000</td>\n",
              "      <td>0.223469</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.170874</td>\n",
              "      <td>0.087639</td>\n",
              "      <td>0.351110</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48044</th>\n",
              "      <td>0.000055</td>\n",
              "      <td>0.000323</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>0.062666</td>\n",
              "      <td>0.063025</td>\n",
              "      <td>0.024962</td>\n",
              "      <td>0.014356</td>\n",
              "      <td>0.397474</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>48045 rows × 45 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       retweet_count  ...  largeGatheringsExpanded to 20+ People Prohibited\n",
              "0           0.000000  ...                                                 0\n",
              "1           0.003185  ...                                                 0\n",
              "2           0.000042  ...                                                 0\n",
              "3           0.000000  ...                                                 0\n",
              "4           0.000929  ...                                                 0\n",
              "...              ...  ...                                               ...\n",
              "48040       0.000004  ...                                                 0\n",
              "48041       0.020760  ...                                                 0\n",
              "48042       0.085402  ...                                                 0\n",
              "48043       0.000004  ...                                                 0\n",
              "48044       0.000055  ...                                                 0\n",
              "\n",
              "[48045 rows x 45 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 330
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gvnHZLdZJAWS"
      },
      "source": [
        "Y_train = train_set[[\"sentiment\"]]\n",
        "X_train = train_set.drop(columns = [\"sentiment\"])\n",
        "Y_test = test_set[\"sentiment\"]\n",
        "X_test = test_set.drop(columns = [\"sentiment\"])\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m1MIoQfvJAWV"
      },
      "source": [
        "headers = X_train.head(0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JFpISOnJJAWX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b29db97f-c03c-4257-bbc8-c60e3d235262"
      },
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "lr = LinearRegression()\n",
        "lr.fit(X_train,Y_train)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 333
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "778A6TKIJAWb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "22e1d4e4-dbc6-439b-b55e-4caafc672b69"
      },
      "source": [
        "lr.coef_[0]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-1.75799176e-01,  2.98918053e-03,  1.53849667e-03,  2.42311255e-03,\n",
              "       -2.05285537e-02,  1.21065213e-02,  6.92713515e-03,  4.15462161e-03,\n",
              "       -2.29529107e-03, -4.09164166e-03,  4.30741046e-03, -5.71218286e-03,\n",
              "        7.79170514e-03, -1.56125113e-17,  1.64798730e-17, -1.04083409e-17,\n",
              "       -3.43322768e-03,  3.12303941e-03, -3.94780250e-03, -4.58252728e-03,\n",
              "        1.79548684e-03,  7.04503121e-03,  1.30104261e-18,  8.67361738e-19,\n",
              "        1.18803137e-03, -1.18803137e-03,  0.00000000e+00,  0.00000000e+00,\n",
              "        0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\n",
              "       -1.70260205e-03, -2.43056690e-03,  2.41810173e-04,  1.69868725e-03,\n",
              "        5.08096414e-03,  0.00000000e+00,  0.00000000e+00, -2.42135653e-03,\n",
              "       -4.82838642e-03,  7.92246681e-04, -2.68358088e-03,  0.00000000e+00])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 334
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kFhiIsvBJAWg"
      },
      "source": [
        "pred = lr.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1DqljhRqJAWk"
      },
      "source": [
        "heads = []\n",
        "for col in headers.columns:\n",
        "  heads = heads + [col]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8ac9sJ5JJAWo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "outputId": "bde65076-d918-445e-f356-09fb55ae7b5a"
      },
      "source": [
        "coeff = pd.DataFrame([lr.coef_[0]],columns = heads)\n",
        "sorted_coeff_tweets = coeff.sort_values(by=0, ascending=False, axis=1)\n",
        "sorted_coeff_tweets"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>user_followers_count</th>\n",
              "      <th>Total</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>Median</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>easingOrderYes</th>\n",
              "      <th>largeGatherings&gt;10 People Prohibited</th>\n",
              "      <th>stayAtHomeStatewide</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>mandatoryQuarantineNo Action</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>retweet_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.012107</td>\n",
              "      <td>0.007792</td>\n",
              "      <td>0.007045</td>\n",
              "      <td>0.006927</td>\n",
              "      <td>0.005081</td>\n",
              "      <td>0.004307</td>\n",
              "      <td>0.004155</td>\n",
              "      <td>0.003123</td>\n",
              "      <td>0.002989</td>\n",
              "      <td>0.002423</td>\n",
              "      <td>0.001795</td>\n",
              "      <td>0.001699</td>\n",
              "      <td>0.001538</td>\n",
              "      <td>0.001188</td>\n",
              "      <td>0.000792</td>\n",
              "      <td>0.000242</td>\n",
              "      <td>1.647987e-17</td>\n",
              "      <td>1.301043e-18</td>\n",
              "      <td>8.673617e-19</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1.040834e-17</td>\n",
              "      <td>-1.561251e-17</td>\n",
              "      <td>-0.001188</td>\n",
              "      <td>-0.001703</td>\n",
              "      <td>-0.002295</td>\n",
              "      <td>-0.002421</td>\n",
              "      <td>-0.002431</td>\n",
              "      <td>-0.002684</td>\n",
              "      <td>-0.003433</td>\n",
              "      <td>-0.003948</td>\n",
              "      <td>-0.004092</td>\n",
              "      <td>-0.004583</td>\n",
              "      <td>-0.004828</td>\n",
              "      <td>-0.005712</td>\n",
              "      <td>-0.020529</td>\n",
              "      <td>-0.175799</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   JHU_ConfirmedDeaths  ...  retweet_count\n",
              "0             0.012107  ...      -0.175799\n",
              "\n",
              "[1 rows x 44 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 337
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MZXnE9jnC3xn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "outputId": "8770942e-9494-4642-9c6c-f2d5ef09ff19"
      },
      "source": [
        "sorted_coeff_survey"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>coronavirusConcern</th>\n",
              "      <th>religiosity</th>\n",
              "      <th>ethnicity_asian</th>\n",
              "      <th>asymptomaticSpread</th>\n",
              "      <th>coronaAllHospitalize</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>female</th>\n",
              "      <th>politicalParty</th>\n",
              "      <th>ethnicitySpreadsCovid</th>\n",
              "      <th>male</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>coronaKillsMost</th>\n",
              "      <th>education_postgrad</th>\n",
              "      <th>ethnicity_hispanic-latino</th>\n",
              "      <th>ethnicity_black</th>\n",
              "      <th>ethnicity_other-mixed</th>\n",
              "      <th>allSpreadCovid</th>\n",
              "      <th>infectFromAnimal</th>\n",
              "      <th>onlySickSpread</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>Total</th>\n",
              "      <th>politicalBelief</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>elderlyMoreRisk</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>Median</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>hasCoronavirusBelief</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>youngInvulnerable</th>\n",
              "      <th>education_highSchool</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>religion_agnostic</th>\n",
              "      <th>nonNativesSpreadCovid</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>education_school</th>\n",
              "      <th>religion_catholic</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>education_some-college</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>religion_jewish</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>religion_nothing-in-particular</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>religion_other-protestant</th>\n",
              "      <th>coronaOnlyElderly</th>\n",
              "      <th>religion_muslim</th>\n",
              "      <th>coronaSimilarFlu</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>religion_hindu</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>religion_something-else</th>\n",
              "      <th>religion_buddhist</th>\n",
              "      <th>religion_evangelical-protestant</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>religion_orthodox</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "      <th>religion_mormon</th>\n",
              "      <th>trumpApproval</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>57.499286</td>\n",
              "      <td>46.739485</td>\n",
              "      <td>8.937475</td>\n",
              "      <td>6.224589</td>\n",
              "      <td>5.723425</td>\n",
              "      <td>5.20004</td>\n",
              "      <td>4.438864</td>\n",
              "      <td>4.064378</td>\n",
              "      <td>3.776923</td>\n",
              "      <td>3.561144</td>\n",
              "      <td>3.019261</td>\n",
              "      <td>2.835363</td>\n",
              "      <td>2.58619</td>\n",
              "      <td>2.336474</td>\n",
              "      <td>2.326957</td>\n",
              "      <td>2.326714</td>\n",
              "      <td>2.059076</td>\n",
              "      <td>1.860195</td>\n",
              "      <td>1.264087</td>\n",
              "      <td>0.58384</td>\n",
              "      <td>0.530055</td>\n",
              "      <td>0.43558</td>\n",
              "      <td>0.198545</td>\n",
              "      <td>0.147315</td>\n",
              "      <td>0.140482</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>2.220446e-16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1.110223e-16</td>\n",
              "      <td>-8.881784e-16</td>\n",
              "      <td>-1.776357e-15</td>\n",
              "      <td>-3.552714e-15</td>\n",
              "      <td>-5.329071e-15</td>\n",
              "      <td>-0.067334</td>\n",
              "      <td>-0.091666</td>\n",
              "      <td>-0.11013</td>\n",
              "      <td>-0.164233</td>\n",
              "      <td>-0.62026</td>\n",
              "      <td>-0.660184</td>\n",
              "      <td>-0.704635</td>\n",
              "      <td>-1.462473</td>\n",
              "      <td>-1.498177</td>\n",
              "      <td>-1.636827</td>\n",
              "      <td>-1.664826</td>\n",
              "      <td>-1.729106</td>\n",
              "      <td>-1.730353</td>\n",
              "      <td>-1.960364</td>\n",
              "      <td>-2.174822</td>\n",
              "      <td>-2.212843</td>\n",
              "      <td>-2.222772</td>\n",
              "      <td>-2.384879</td>\n",
              "      <td>-2.437248</td>\n",
              "      <td>-2.524563</td>\n",
              "      <td>-2.813469</td>\n",
              "      <td>-2.822624</td>\n",
              "      <td>-2.962112</td>\n",
              "      <td>-3.038065</td>\n",
              "      <td>-4.053789</td>\n",
              "      <td>-4.203036</td>\n",
              "      <td>-4.292956</td>\n",
              "      <td>-4.609917</td>\n",
              "      <td>-4.903391</td>\n",
              "      <td>-5.123144</td>\n",
              "      <td>-5.253918</td>\n",
              "      <td>-5.414241</td>\n",
              "      <td>-5.666374</td>\n",
              "      <td>-5.736977</td>\n",
              "      <td>-6.715426</td>\n",
              "      <td>-7.488178</td>\n",
              "      <td>-7.905778</td>\n",
              "      <td>-10.767655</td>\n",
              "      <td>-13.038514</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   JHU_ConfirmedDeaths  coronavirusConcern  ...  religion_mormon  trumpApproval\n",
              "0            57.499286           46.739485  ...       -10.767655     -13.038514\n",
              "\n",
              "[1 rows x 78 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 338
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3xDJ-4fwGtpr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "280fcb97-2314-457f-b230-21a3a1b66322"
      },
      "source": [
        "list(sorted_coeff_survey)[0:15]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['JHU_ConfirmedDeaths',\n",
              " 'coronavirusConcern',\n",
              " 'religiosity',\n",
              " 'ethnicity_asian',\n",
              " 'asymptomaticSpread',\n",
              " 'coronaAllHospitalize',\n",
              " 'stayAtHomeRolled Back to High Risk Groups',\n",
              " 'female',\n",
              " 'politicalParty',\n",
              " 'ethnicitySpreadsCovid',\n",
              " 'male',\n",
              " 'mandatoryQuarantineLifted',\n",
              " 'coronaKillsMost',\n",
              " 'education_postgrad',\n",
              " 'ethnicity_hispanic-latino']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 352
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Oxs16A7xHcLd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "973d5a64-a24c-4976-9aa6-fd39ec3f0ed2"
      },
      "source": [
        "list(sorted_coeff_survey)[-15:]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['religion_other-protestant',\n",
              " 'coronaOnlyElderly',\n",
              " 'religion_muslim',\n",
              " 'coronaSimilarFlu',\n",
              " 'stayAtHomeHigh-Risk Groups',\n",
              " 'religion_hindu',\n",
              " 'stayAtHomeNo Action',\n",
              " 'religion_something-else',\n",
              " 'religion_buddhist',\n",
              " 'religion_evangelical-protestant',\n",
              " 'largeGatheringsLifted',\n",
              " 'religion_orthodox',\n",
              " 'JHU_ConfirmedCases',\n",
              " 'religion_mormon',\n",
              " 'trumpApproval']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 353
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lnC3-v0pGwIx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "833da4d9-fc0d-422b-c0ea-52cccdc152aa"
      },
      "source": [
        "list(sorted_coeff_tweets)[:15]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['JHU_ConfirmedDeaths',\n",
              " 'stayAtHomeHigh-Risk Groups',\n",
              " 'mandatoryQuarantineRolled Back to Certain States',\n",
              " 'death_rate',\n",
              " 'largeGatheringsNo Action',\n",
              " 'stayAtHomeNo Action',\n",
              " 'Time_Diff',\n",
              " 'mandatoryQuarantineFrom Certain States',\n",
              " 'user_followers_count',\n",
              " 'Total',\n",
              " 'mandatoryQuarantineAll Air Travelers',\n",
              " 'largeGatheringsExpanded to New Limit Above 25',\n",
              " 'Median',\n",
              " 'easingOrderNo',\n",
              " 'largeGatheringsExpanded to >10 People Prohibited']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 354
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "05k_20CvHjjP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "85afbff0-506d-4032-b2ce-477dbc589420"
      },
      "source": [
        "list(sorted_coeff_tweets)[-15:]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['stayAtHomeHigh-risk Groups',\n",
              " 'easingOrderYes',\n",
              " 'largeGatherings>10 People Prohibited',\n",
              " 'stayAtHomeStatewide',\n",
              " 'largeGatheringsExpanded to New Limit Below 25',\n",
              " 'largeGatheringsAll Gatherings Prohibited',\n",
              " 'largeGatheringsExpanded to New Limit of 25',\n",
              " 'mandatoryQuarantineNo Action',\n",
              " 'mandatoryQuarantineAll Travelers',\n",
              " 'stayAtHomeLifted',\n",
              " 'mandatoryQuarantineLifted',\n",
              " 'largeGatheringsOther',\n",
              " 'stayAtHomeRolled Back to High Risk Groups',\n",
              " 'JHU_ConfirmedCases',\n",
              " 'retweet_count']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 355
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aZu2XaMZLIiv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177
        },
        "outputId": "46956f65-0c51-4d3d-b4ba-b5deb86872d2"
      },
      "source": [
        "pd.concat([sorted_coeff_survey,sorted_coeff_tweets],join='inner')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>Total</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>Median</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>57.499286</td>\n",
              "      <td>4.438864</td>\n",
              "      <td>2.835363</td>\n",
              "      <td>0.530055</td>\n",
              "      <td>0.435580</td>\n",
              "      <td>0.198545</td>\n",
              "      <td>0.147315</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>2.220446e-16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1.110223e-16</td>\n",
              "      <td>-8.881784e-16</td>\n",
              "      <td>-1.776357e-15</td>\n",
              "      <td>-3.552714e-15</td>\n",
              "      <td>-5.329071e-15</td>\n",
              "      <td>-0.091666</td>\n",
              "      <td>-0.110130</td>\n",
              "      <td>-0.164233</td>\n",
              "      <td>-0.620260</td>\n",
              "      <td>-0.704635</td>\n",
              "      <td>-1.462473</td>\n",
              "      <td>-1.664826</td>\n",
              "      <td>-1.729106</td>\n",
              "      <td>-2.174822</td>\n",
              "      <td>-2.384879</td>\n",
              "      <td>-2.524563</td>\n",
              "      <td>-2.822624</td>\n",
              "      <td>-3.038065</td>\n",
              "      <td>-4.903391</td>\n",
              "      <td>-5.253918</td>\n",
              "      <td>-6.715426</td>\n",
              "      <td>-7.905778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.012107</td>\n",
              "      <td>-0.005712</td>\n",
              "      <td>-0.004583</td>\n",
              "      <td>-0.002684</td>\n",
              "      <td>0.007045</td>\n",
              "      <td>0.003123</td>\n",
              "      <td>0.002423</td>\n",
              "      <td>1.301043e-18</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1.561251e-17</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>8.673617e-19</td>\n",
              "      <td>1.647987e-17</td>\n",
              "      <td>-1.040834e-17</td>\n",
              "      <td>0.001795</td>\n",
              "      <td>0.004155</td>\n",
              "      <td>0.001538</td>\n",
              "      <td>0.001188</td>\n",
              "      <td>0.000792</td>\n",
              "      <td>0.001699</td>\n",
              "      <td>0.006927</td>\n",
              "      <td>-0.002431</td>\n",
              "      <td>-0.004828</td>\n",
              "      <td>-0.002421</td>\n",
              "      <td>-0.004092</td>\n",
              "      <td>0.005081</td>\n",
              "      <td>-0.003948</td>\n",
              "      <td>0.007792</td>\n",
              "      <td>0.004307</td>\n",
              "      <td>0.000242</td>\n",
              "      <td>-0.020529</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   JHU_ConfirmedDeaths  ...  JHU_ConfirmedCases\n",
              "0            57.499286  ...           -7.905778\n",
              "0             0.012107  ...           -0.020529\n",
              "\n",
              "[2 rows x 38 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 358
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rAR4fq9mLb3I",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 177
        },
        "outputId": "272a5720-2eb0-4264-ce3e-929637b1ec4f"
      },
      "source": [
        "pd.concat([sorted_coeff_tweets,sorted_coeff_survey],join='inner')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>JHU_ConfirmedDeaths</th>\n",
              "      <th>stayAtHomeHigh-Risk Groups</th>\n",
              "      <th>mandatoryQuarantineRolled Back to Certain States</th>\n",
              "      <th>death_rate</th>\n",
              "      <th>largeGatheringsNo Action</th>\n",
              "      <th>stayAtHomeNo Action</th>\n",
              "      <th>Time_Diff</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States</th>\n",
              "      <th>Total</th>\n",
              "      <th>mandatoryQuarantineAll Air Travelers</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Above 25</th>\n",
              "      <th>Median</th>\n",
              "      <th>easingOrderNo</th>\n",
              "      <th>largeGatheringsExpanded to &gt;10 People Prohibited</th>\n",
              "      <th>largeGatheringsLifted</th>\n",
              "      <th>stayAtHomeNew Stay at Home Order</th>\n",
              "      <th>mandatoryQuarantineRolled Back to International Travel</th>\n",
              "      <th>mandatoryQuarantineFrom Certain States (New)</th>\n",
              "      <th>easingOrderReopens Certain Businesses</th>\n",
              "      <th>easingOrderPaused</th>\n",
              "      <th>emergencyDeclarationYes</th>\n",
              "      <th>easingOrderProceeding with Reopening</th>\n",
              "      <th>largeGatheringsNew Limit on Large Gatherings in Place</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25 or Fewer</th>\n",
              "      <th>easingOrderReopened</th>\n",
              "      <th>largeGatheringsExpanded to 20+ People Prohibited</th>\n",
              "      <th>easingOrderNew Restrictions Imposed</th>\n",
              "      <th>stayAtHomeOther</th>\n",
              "      <th>stayAtHomeHigh-risk Groups</th>\n",
              "      <th>largeGatheringsExpanded to New Limit Below 25</th>\n",
              "      <th>largeGatheringsAll Gatherings Prohibited</th>\n",
              "      <th>largeGatheringsExpanded to New Limit of 25</th>\n",
              "      <th>mandatoryQuarantineAll Travelers</th>\n",
              "      <th>stayAtHomeLifted</th>\n",
              "      <th>mandatoryQuarantineLifted</th>\n",
              "      <th>largeGatheringsOther</th>\n",
              "      <th>stayAtHomeRolled Back to High Risk Groups</th>\n",
              "      <th>JHU_ConfirmedCases</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.012107</td>\n",
              "      <td>0.007792</td>\n",
              "      <td>0.007045</td>\n",
              "      <td>0.006927</td>\n",
              "      <td>0.005081</td>\n",
              "      <td>0.004307</td>\n",
              "      <td>0.004155</td>\n",
              "      <td>0.003123</td>\n",
              "      <td>0.002423</td>\n",
              "      <td>0.001795</td>\n",
              "      <td>0.001699</td>\n",
              "      <td>0.001538</td>\n",
              "      <td>0.001188</td>\n",
              "      <td>0.000792</td>\n",
              "      <td>0.000242</td>\n",
              "      <td>1.647987e-17</td>\n",
              "      <td>1.301043e-18</td>\n",
              "      <td>8.673617e-19</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-1.040834e-17</td>\n",
              "      <td>-1.561251e-17</td>\n",
              "      <td>-0.002421</td>\n",
              "      <td>-0.002431</td>\n",
              "      <td>-0.002684</td>\n",
              "      <td>-0.003948</td>\n",
              "      <td>-0.004092</td>\n",
              "      <td>-0.004583</td>\n",
              "      <td>-0.004828</td>\n",
              "      <td>-0.005712</td>\n",
              "      <td>-0.020529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>57.499286</td>\n",
              "      <td>-4.903391</td>\n",
              "      <td>0.435580</td>\n",
              "      <td>-1.664826</td>\n",
              "      <td>-2.822624</td>\n",
              "      <td>-5.253918</td>\n",
              "      <td>-0.110130</td>\n",
              "      <td>0.198545</td>\n",
              "      <td>0.147315</td>\n",
              "      <td>-0.091666</td>\n",
              "      <td>-1.462473</td>\n",
              "      <td>-0.164233</td>\n",
              "      <td>-0.620260</td>\n",
              "      <td>-0.704635</td>\n",
              "      <td>-6.715426</td>\n",
              "      <td>-3.552714e-15</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>-1.776357e-15</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.220446e-16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-8.881784e-16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.881784e-16</td>\n",
              "      <td>-5.329071e-15</td>\n",
              "      <td>-1.110223e-16</td>\n",
              "      <td>-2.384879</td>\n",
              "      <td>-1.729106</td>\n",
              "      <td>0.530055</td>\n",
              "      <td>-3.038065</td>\n",
              "      <td>-2.524563</td>\n",
              "      <td>2.835363</td>\n",
              "      <td>-2.174822</td>\n",
              "      <td>4.438864</td>\n",
              "      <td>-7.905778</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   JHU_ConfirmedDeaths  ...  JHU_ConfirmedCases\n",
              "0             0.012107  ...           -0.020529\n",
              "0            57.499286  ...           -7.905778\n",
              "\n",
              "[2 rows x 38 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 359
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZSQGV2JzDqpX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 16
        },
        "outputId": "374b815d-b4cb-4f63-c549-1fa4ed0684a9"
      },
      "source": [
        "sorted_coeff_tweets.to_csv('tweets_coeff.csv') \n",
        "files.download(\"tweets_coeff.csv\")\n",
        "sorted_coeff_survey.to_csv('survey_coeff.csv') \n",
        "files.download(\"survey_coeff.csv\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ],
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "download(\"download_be13fddd-4643-4220-b290-109bfb8da70e\", \"tweets_coeff.csv\", 2115)"
            ],
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ],
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "download(\"download_14166a71-8a67-4723-8093-eb62d1e9069e\", \"survey_coeff.csv\", 3317)"
            ],
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OexSws8hH_wa"
      },
      "source": [
        "# Normalize numeric columns"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OzqUondC2-uu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "c3697665-ab01-4bea-bb38-e4dbc01021ee"
      },
      "source": [
        "\n",
        "import re\n",
        "states = [\n",
        "    'Alabama_UnitedStates','Alaska_UnitedStates','Arizona_UnitedStates',\n",
        "    'Arkansas_UnitedStates','California_UnitedStates','Colorado_UnitedStates',\n",
        "    'Connecticut_UnitedStates','Delaware_UnitedStates','DistrictofColumbia_UnitedStates',\n",
        "    'Florida_UnitedStates','Georgia_UnitedStates','Hawaii_UnitedStates',\n",
        "    'Idaho_UnitedStates','Illinois_UnitedStates','Indiana_UnitedStates',\n",
        "    'Iowa_UnitedStates','Kansas_UnitedStates','Kentucky_UnitedStates',\n",
        "    'Louisiana_UnitedStates','Maine_UnitedStates','Maryland_UnitedStates',\n",
        "    'Massachusetts_UnitedStates','Michigan_UnitedStates','Minnesota_UnitedStates',\n",
        "    'Mississippi_UnitedStates','Missouri_UnitedStates','Montana_UnitedStates',\n",
        "    'Nebraska_UnitedStates','Nevada_UnitedStates','NewHampshire_UnitedStates',\n",
        "    'NewJersey_UnitedStates','NewMexico_UnitedStates','NewYork_UnitedStates',\n",
        "    'NorthCarolina_UnitedStates','NorthDakota_UnitedStates','Ohio_UnitedStates',\n",
        "    'Oklahoma_UnitedStates','Oregon_UnitedStates','Pennsylvania_UnitedStates',\n",
        "    'PuertoRico_UnitedStates','RhodeIsland_UnitedStates','SouthCarolina_UnitedStates',\n",
        "    'SouthDakota_UnitedStates','Tennessee_UnitedStates','Texas_UnitedStates',\n",
        "    'Utah_UnitedStates','Vermont_UnitedStates','Virginia_UnitedStates',\n",
        "    'Washington_UnitedStates','WestVirginia_UnitedStates','Wisconsin_UnitedStates',\n",
        "    'Wyoming_UnitedStates'\n",
        "]\n",
        "\n",
        "\n",
        "today = '2020-11-11'\n",
        "metrics = [\n",
        "    \"JHU_ConfirmedCases\",\n",
        "    \"JHU_ConfirmedDeaths\"\n",
        "]\n",
        "complete_timeseries = c3aidatalake.evalmetrics(\n",
        "    \"outbreaklocation\",\n",
        "    {\n",
        "        \"spec\" : {\n",
        "            \"ids\" : states,\n",
        "            \"expressions\" : metrics,\n",
        "            \"start\" : \"2020-02-15\",\n",
        "            \"end\" : today,\n",
        "            \"interval\" : \"DAY\",\n",
        "        }\n",
        "    },\n",
        "    get_all = True\n",
        ")\n",
        "\n",
        "state_from_location = lambda x: \"_\".join(x.split('_')[-2:]).replace(\"_UnitedStates\", \"\")\n",
        "def reshapeTimeseries(timeseries_df):\n",
        "\n",
        "    reshaped_ts = pd.melt(\n",
        "        timeseries_df, \n",
        "        id_vars=['dates'], \n",
        "        value_vars=[x for x in timeseries_df.columns if re.match('.*\\.data', x)]\n",
        "    ).rename(columns={\"value\": \"data\", \"dates\": \"date\"})\n",
        "\n",
        "    reshaped_ts[\"state\"] = (\n",
        "        reshaped_ts[\"variable\"]\n",
        "        .str.replace(\"\\..*\", \"\")\n",
        "        .apply(state_from_location)\n",
        "    )\n",
        "\n",
        "    reshaped_ts[\"metric\"] = (\n",
        "        reshaped_ts[\"variable\"]\n",
        "        .str.replace(\".*UnitedStates\\.\", \"\")\n",
        "        .str.replace(\"\\..*\", \"\")\n",
        "    )\n",
        "    \n",
        "\n",
        "    return reshaped_ts\n",
        "state_timeseries = reshapeTimeseries(complete_timeseries)\n",
        "state_timeseries.head()\n",
        "state_cases = (\n",
        "    state_timeseries\n",
        "    .loc[state_timeseries.date > '2020-03-10']\n",
        "    .groupby(['date', 'state', 'metric'])['data']\n",
        "    .sum()\n",
        "    .unstack('metric')\n",
        "    .reset_index()\n",
        ")\n",
        "state_cases['death_rate'] = state_cases.apply(\n",
        "    lambda x: 0 if x.JHU_ConfirmedCases == 0\n",
        "    else x.JHU_ConfirmedDeaths / x.JHU_ConfirmedCases,\n",
        "    axis=1\n",
        ")\n",
        "print(state_cases)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-6ec890e417e0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m     \u001b[0;34m\"JHU_ConfirmedDeaths\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m ]\n\u001b[0;32m---> 30\u001b[0;31m complete_timeseries = c3aidatalake.evalmetrics(\n\u001b[0m\u001b[1;32m     31\u001b[0m     \u001b[0;34m\"outbreaklocation\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     {\n",
            "\u001b[0;31mNameError\u001b[0m: name 'c3aidatalake' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1iyEQan3-Vky"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "36IteX6l9ykg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "171fffa5-86e2-49d7-eeb6-7e513941dfc0"
      },
      "source": [
        "state_cases = state_cases.loc[state_cases['date']<'2020-06-12']\n",
        "\n",
        "#plotting all states(before may)\n",
        "grouped = state_cases.groupby('state')\n",
        "ncols=4\n",
        "nrows = int(np.ceil(grouped.ngroups/ncols))\n",
        "\n",
        "fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20,20), sharey=True, squeeze = False)\n",
        "\n",
        "for (key, ax) in zip(grouped.groups.keys(), axes.flatten()):\n",
        "    grouped.get_group(key).plot(ax=ax, x='date',y='JHU_ConfirmedCases', label = key)\n",
        "plt.title(\"Case data\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-8a3fa592e0d9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mstate_cases\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstate_cases\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstate_cases\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'date'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m<\u001b[0m\u001b[0;34m'2020-06-12'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#plotting all states(before may)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mgrouped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstate_cases\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'state'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mncols\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'state_cases' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PATzq4HO97GV"
      },
      "source": [
        "#obtaining census data from 2018\n",
        "population_limits = (\n",
        "    f\"contains(parent, 'UnitedStates') &&\" # US data\n",
        "    \"gender == 'Male/Female' && year == 2018 && origin == 'United States Census'\" # From 2018 estimates\n",
        ")\n",
        "\n",
        "census = c3aidatalake.fetch(\n",
        "    \"populationdata\",\n",
        "    {\n",
        "      \"spec\": {\n",
        "        \"filter\": population_limits\n",
        "      }\n",
        "    },\n",
        "    get_all = True\n",
        ")\n",
        "\n",
        "census['state'] = census['parent.id'].apply(state_from_location)\n",
        "census = census.rename(columns={'parent.id': 'location'})\n",
        "census_cols = [\n",
        "    \"populationAge\",\n",
        "    \"value\",\n",
        "    \"location\",\n",
        "    \"state\"\n",
        "]\n",
        "\n",
        "census_by_state = (\n",
        "    census[census_cols]\n",
        "    .loc[census.state.isin(map(lambda x: x.replace(\"_UnitedStates\", \"\"), states))]\n",
        "    .groupby([\"state\", \"populationAge\"])['value']\n",
        "    .sum()\n",
        "    .unstack(\"populationAge\")\n",
        "    .reset_index()\n",
        ")\n",
        "from sklearn import datasets\n",
        "census_by_state.head(6)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aeBBkTUTAMsY"
      },
      "source": [
        "merged_cases = pd.merge(left=census_by_state, right=state_cases, left_on='state', right_on='state')\n",
        "merged_cases['cases_per_pop']=merged_cases['JHU_ConfirmedCases']/merged_cases['Total']\n",
        "\n",
        "grouped = merged_cases.groupby('state')\n",
        "ncols=4\n",
        "nrows = int(np.ceil(grouped.ngroups/ncols))\n",
        "\n",
        "fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20,20), sharey=True, squeeze = False)\n",
        "\n",
        "for (key, ax) in zip(grouped.groups.keys(), axes.flatten()):\n",
        "    grouped.get_group(key).plot(ax=ax, x='date',y='cases_per_pop', label = key)\n",
        "plt.title(\"Case data\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LiC47eRjoE4e"
      },
      "source": [
        "# Parse Twitter Sentiment Data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "be5U_xyzihZM"
      },
      "source": [
        "# New Section"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KSxjvsjiBi_I"
      },
      "source": [
        "dataframe=pd.read_csv(\"C:\\\\Users\\\\xinli\\\\Downloads\\\\corona_tweets_51.csv\", header=None)\n",
        "dataframe=dataframe[0]\n",
        "dataframe.to_csv(\"ready_corona_tweets_51.csv\", index=False, header=None)\n",
        "\n",
        "#replace empty locations with nan and remove them\n",
        "dataframe=pd.read_csv(\"C:\\\\Users\\\\xinli\\\\Downloads\\\\ready_corona_tweets_59.csv\", header=None)\n",
        "dataframe2=pd.read_csv(\"C:\\\\Users\\\\xinli\\\\Downloads\\\\corona_tweets_59.csv\", header=None)\n",
        "dataframe2.columns = ['id','sentiment']\n",
        "dataframe2['id']=dataframe2['id'].astype(np.int64)\n",
        "dataframe.columns = dataframe.iloc[0]\n",
        "dataframe = dataframe[1:]\n",
        "dataframe['user_location'].replace('', np.nan, inplace=True)\n",
        "dataframe.dropna(subset=['user_location'], inplace=True)\n",
        "dataframe['id']=dataframe['id'].astype(np.int64)\n",
        "\n",
        "merged_inner = pd.merge(left=dataframe, right=dataframe2, left_on='id', right_on='id')\n",
        "count_tweets= merged_inner['user_location'].value_counts()\n",
        "# could replace this with a dictionary, I also don't think it's 100% accurate since the abbreviations could be used\n",
        "#for other things\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('California|CA'), 'user_location'] = 'California'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Texas|TX'), 'user_location'] = 'Texas'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('NY|New York'), 'user_location'] = 'New York'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Texas|TX'), 'user_location'] = 'Texas'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Minnesota'), 'user_location'] = 'Minnesota'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Oregon'), 'user_location'] = 'Oregon'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('AZ| Arizona'), 'user_location'] = 'Arizona'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('AK|Alaska'), 'user_location'] = 'Alaska'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('CO|Colorado'), 'user_location'] = 'Colorado'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Delaware|DE'), 'user_location'] = 'Delaware'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Florida|FL'), 'user_location'] = 'Florida'\n",
        "merged_inner.loc[merged_inner['user_location'].str.contains('Georgia|GA'), 'user_location'] = 'Georgia'\n",
        "\n",
        "\n",
        "merged_inner = merged_inner[pd.to_numeric(merged_inner['retweet_count'])>5]\n",
        "merged_inner = merged_inner.drop(columns=['user_default_profile_image', 'in_reply_to_user_id', 'in_reply_to_status_id','in_reply_to_screen_name', 'user_time_zone','coordinates','media'])\n",
        "\n",
        "#merged_inner=merged_inner[merged_inner.groupby('user_location').user_location.transform('count') > 1]"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
